+ '[' '!' -v TESTCASE ']'
+ '[' '!' -f /work/pov_input ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer assimp_fuzzer /work/pov_input
vm.mmap_rnd_bits = 28
/out/assimp_fuzzer -rss_limit_mb=2560 -timeout=25 /work/pov_input < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3576563949
INFO: Loaded 1 modules   (235610 inline 8-bit counters): 235610 [0x555556fa54b8, 0x555556fded12), 
INFO: Loaded 1 PC tables (235610 PCs): 235610 [0x555556fded18,0x5555573772b8), 
/out/assimp_fuzzer: Running 1 inputs 1 time(s) each.
Running: /work/pov_input
Info,  T0: Load $$$___magic___$$$.
Warn,  T0: Ignored file of unsupported type CONTENT_TYPES_ARCHIVES[Content_Types].xml
ai_assert failure in /src/assimp/code/Common/DefaultIOSystem.cpp(117): strMode != nullptr
==16== ERROR: libFuzzer: deadly signal
    #0 0x55555606ea24 in __sanitizer_print_stack_trace /src/llvm-project/compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:31:3
    #1 0x555555feda78 in fuzzer::PrintStackTrace() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x555555fd0e13 in fuzzer::Fuzzer::CrashCallback() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:231:3
    #3 0x7ffff7e6541f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1441f) (BuildId: 5cfb896dd40f90aa8c6c8bb856004d1f5cfe293c)
    #4 0x7ffff7c5900a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300a) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #5 0x7ffff7c38858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x22858) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #6 0x5555560adae0 in Assimp::defaultAiAssertHandler(char const*, char const*, int) /src/assimp/code/Common/AssertHandler.cpp:56:5
    #7 0x555556098912 in Assimp::DefaultIOSystem::Open(char const*, char const*) /src/assimp/code/Common/DefaultIOSystem.cpp:117:5
    #8 0x555556a000b5 in call_zopendisk64 (/out/assimp_fuzzer+0x14ac0b5)
    #9 0x5555568ea707 in unzGoToNextDisk unzip.c
    #10 0x5555568e9827 in unzCheckCurrentFileCoherencyHeader unzip.c
    #11 0x5555568e921c in unzOpenCurrentFile3 (/out/assimp_fuzzer+0x139521c)
    #12 0x5555568e9c01 in unzOpenCurrentFile (/out/assimp_fuzzer+0x1395c01)
    #13 0x55555693f828 in Assimp::ZipFileInfo::Extract(void*) const /src/assimp/code/Common/ZipArchiveIOSystem.cpp:215:9
    #14 0x5555569427c3 in OpenFile /src/assimp/code/Common/ZipArchiveIOSystem.cpp:426:21
    #15 0x5555569427c3 in Assimp::ZipArchiveIOSystem::Open(char const*, char const*) /src/assimp/code/Common/ZipArchiveIOSystem.cpp:510:19
    #16 0x5555568c05f3 in Assimp::D3MF::D3MFOpcPackage::D3MFOpcPackage(Assimp::IOSystem*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /src/assimp/code/AssetLib/3MF/D3MFOpcPackage.cpp:137:49
    #17 0x5555568b606e in Assimp::D3MFImporter::CanRead(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Assimp::IOSystem*, bool) const /src/assimp/code/AssetLib/3MF/D3MFImporter.cpp:600:30
    #18 0x55555609d7e2 in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:625:38
    #19 0x55555609ceb8 in Assimp::Importer::ReadFileFromMemory(void const*, unsigned long, unsigned int, char const*) /src/assimp/code/Common/Importer.cpp:512:5
    #20 0x55555606fd90 in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:53:34
    #21 0x555555fd2320 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #22 0x555555fbd595 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
    #23 0x555555fc302f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
    #24 0x555555fee2d2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #25 0x7ffff7c3a082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58)
    #26 0x555555fb577d in _start (/out/assimp_fuzzer+0xa6177d)

DEDUP_TOKEN: __sanitizer_print_stack_trace--fuzzer::PrintStackTrace()--fuzzer::Fuzzer::CrashCallback()
NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal