cp_harness_binary_path: out/filein_harness
cp_harness_id: id_1
cp_harness_name: filein_harness
cp_harness_source_path: src/test/filein_harness.c
crash_report_id: 29a6aeca4b54b6fdbd0ab5a057d8fae75d5fce86ece03f2f437b1d3760fc5954
fuzzer: aflplusplus
harness_info_id: 7995481644139123086
original_crash_id: 3a561937e67f2bb00088170693152fd2a2e4af776fc829564218a42b509c68e8
run_pov_result:
  cid: 3f72b94c8e85cdea9be30016601864817ef55a665e663423ef94de0b28e4fdfd
  exitcode: 0
  pov:
    reports:
    - error_line: 'ERROR: AddressSanitizer: global-buffer-overflow on address 0x<REDACTED>
        at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
      report: "\n WRITE of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
        \ in fgets /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1204:5\n\
        \     #1 0x<REDACTED> in func_a /src/test/./../samples/mock_vp.c:14:9\n  \
        \   #2 0x<REDACTED> in LLVMFuzzerTestOneInput /src/test/filein_harness.c:54:3\n\
        \     #3 0x<REDACTED> in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n\
        \     #4 0x<REDACTED> in fuzzer::Fuzzer::TryDetectingAMemoryLeak(unsigned\
        \ char const*, unsigned long, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:690:3\n\
        \     #5 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:332:8\n\
        \     #6 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
        \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
        \     #7 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
        \     #8 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
        \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #9 0x<REDACTED>\
        \ in _start (/out/filein_harness+0x3c6fd)\n \n 0x<REDACTED> is located <REDACTED>\
        \ bytes before global variable 'pipefd' defined in '/src/test/filein_harness.c:9'\
        \ (0x<REDACTED>) of size <REDACTED>\n 0x<REDACTED> is located <REDACTED> bytes\
        \ after global variable 'items' defined in '/src/test/./../samples/mock_vp.c:5'\
        \ (0x<REDACTED>) of size <REDACTED>\n SUMMARY: AddressSanitizer: global-buffer-overflow\
        \ /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1204:5\
        \ in fgets\n Shadow bytes around the buggy address:\n   0x<REDACTED>: 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00\n =>0x<REDACTED>: 00 00 00 00 00 00 00[06]f9 f9 f9 f9\
        \ 00 f9 f9 f9\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\
        \   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>:\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n Shadow byte legend (one shadow\
        \ byte represents 8 application bytes):\n   Addressable:           00\n  \
        \ Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:    \
        \   fa\n   Freed heap region:       fd\n   Stack left redzone:      f1\n \
        \  Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack after\
        \ return:      f5\n   Stack use after scope:   f8\n   Global redzone:    \
        \      f9\n   Global init order:       f6\n   Poisoned by user:        f7\n\
        \   Container overflow:      fc\n   Array cookie:            ac\n   Intra\
        \ object redzone:    bb\n   ASan internal:           fe\n   Left alloca redzone:\
        \     ca\n   Right alloca redzone:    cb\n <MARKER>ABORTING"
      stacktraces:
      - depth: 0
        func_name: fgets
        line: 1204
        signature: fgets
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:1204
        type: source
      - depth: 1
        func_name: func_a
        line: 14
        signature: func_a
        src_file: samples/mock_vp.c
        src_loc: samples/mock_vp.c:14
        type: source
      - depth: 2
        func_name: LLVMFuzzerTestOneInput
        line: 54
        signature: LLVMFuzzerTestOneInput
        src_file: test/filein_harness.c
        src_loc: test/filein_harness.c:54
        type: source
      - depth: 3
        func_name: fuzzer::Fuzzer::ExecuteCallback
        line: 614
        signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
          long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
        type: source
      - depth: 4
        func_name: fuzzer::Fuzzer::TryDetectingAMemoryLeak
        line: 690
        signature: fuzzer::Fuzzer::TryDetectingAMemoryLeak(unsigned char const*, unsigned
          long, bool)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:690
        type: source
      - depth: 5
        func_name: fuzzer::RunOneTest
        line: 332
        signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:332
        type: source
      - depth: 6
        func_name: fuzzer::FuzzerDriver
        line: 862
        signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
          unsigned long))
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
        type: source
      - depth: 7
        func_name: main
        line: 20
        signature: main
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
        type: source
      - binary: ../lib/x86_64-linux-gnu/libc.so.6
        build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
        depth: 8
        func_name: __libc_start_main
        offset: 147586
        signature: __libc_start_main
        type: binary
      - binary: ../(/out/filein_harness+0x3c6fd)
        depth: 9
        func_name: _start
        signature: _start
        type: maybe_asan_interceptor
      triggered_sanitizers:
      - id_1
    triggered_sanitizers:
    - id_1
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDIzODI5NDk5MzAKIElORk86IExvYWRlZCAxIG1vZHVsZXMgICAoNjkgaW5s
    aW5lIDgtYml0IGNvdW50ZXJzKTogNjkgWzB4NTU1NTU1NzVlMmMwLCAweDU1NTU1NTc1ZTMwNSks
    IAogSU5GTzogTG9hZGVkIDEgUEMgdGFibGVzICg2OSBQQ3MpOiA2OSBbMHg1NTU1NTU3NWUzMDgs
    MHg1NTU1NTU3NWU3NTgpLCAKIC9vdXQvZmlsZWluX2hhcm5lc3M6IFJ1bm5pbmcgMSBpbnB1dHMg
    MSB0aW1lKHMpIGVhY2guCiBSdW5uaW5nOiAvd29yay90bXBfYmxvYgogLi4vc2FtcGxlcy9tb2Nr
    X3ZwLmM6MjY6MTM6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IC0xIG91dCBvZiBib3VuZHMgZm9yIHR5
    cGUgJ2NoYXJbM11bMTBdJwogU1VNTUFSWTogVW5kZWZpbmVkQmVoYXZpb3JTYW5pdGl6ZXI6IHVu
    ZGVmaW5lZC1iZWhhdmlvciAuLi9zYW1wbGVzL21vY2tfdnAuYzoyNjoxMyBpbiAKID09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
    CiA9PTE0PT1FUlJPUjogQWRkcmVzc1Nhbml0aXplcjogZ2xvYmFsLWJ1ZmZlci1vdmVyZmxvdyBv
    biBhZGRyZXNzIDB4NTU1NTU2MGU3OWJlIGF0IHBjIDB4NTU1NTU1NjQwYWJjIGJwIDB4N2ZmZmZm
    ZmZlMTcwIHNwIDB4N2ZmZmZmZmZkOTM4CiBXUklURSBvZiBzaXplIDQwIGF0IDB4NTU1NTU2MGU3
    OWJlIHRocmVhZCBUMAogICAgICMwIDB4NTU1NTU1NjQwYWJiIGluIGZnZXRzIC9zcmMvbGx2bS1w
    cm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9hc2FuLy4uL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVy
    X2NvbW1vbl9pbnRlcmNlcHRvcnMuaW5jOjEyMDQ6NQogICAgICMxIDB4NTU1NTU1NmZhYTRlIGlu
    IGZ1bmNfYSAvc3JjL3Rlc3QvLi8uLi9zYW1wbGVzL21vY2tfdnAuYzoxNDo5CiAgICAgIzIgMHg1
    NTU1NTU2ZmI3NzEgaW4gTExWTUZ1enplclRlc3RPbmVJbnB1dCAvc3JjL3Rlc3QvZmlsZWluX2hh
    cm5lc3MuYzo1NDozCiAgICAgIzMgMHg1NTU1NTU1YWY0OTAgaW4gZnV6emVyOjpGdXp6ZXI6OkV4
    ZWN1dGVDYWxsYmFjayh1bnNpZ25lZCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykgL3NyYy9s
    bHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2Z1enplci9GdXp6ZXJMb29wLmNwcDo2MTQ6MTMK
    ICAgICAjNCAweDU1NTU1NTViMDBmNSBpbiBmdXp6ZXI6OkZ1enplcjo6VHJ5RGV0ZWN0aW5nQU1l
    bW9yeUxlYWsodW5zaWduZWQgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcsIGJvb2wpIC9zcmMv
    bGx2bS1wcm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9mdXp6ZXIvRnV6emVyTG9vcC5jcHA6NjkwOjMK
    ICAgICAjNSAweDU1NTU1NTU5OWM3MCBpbiBmdXp6ZXI6OlJ1bk9uZVRlc3QoZnV6emVyOjpGdXp6
    ZXIqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykgL3NyYy9sbHZtLXByb2plY3QvY29tcGls
    ZXItcnQvbGliL2Z1enplci9GdXp6ZXJEcml2ZXIuY3BwOjMzMjo4CiAgICAgIzYgMHg1NTU1NTU1
    OWY2YmEgaW4gZnV6emVyOjpGdXp6ZXJEcml2ZXIoaW50KiwgY2hhcioqKiwgaW50ICgqKSh1bnNp
    Z25lZCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykpIC9zcmMvbGx2bS1wcm9qZWN0L2NvbXBp
    bGVyLXJ0L2xpYi9mdXp6ZXIvRnV6emVyRHJpdmVyLmNwcDo4NjI6OQogICAgICM3IDB4NTU1NTU1
    NWNiYWIyIGluIG1haW4gL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2Z1enplci9G
    dXp6ZXJNYWluLmNwcDoyMDoxMAogICAgICM4IDB4N2ZmZmY3YTU5MDgyIGluIF9fbGliY19zdGFy
    dF9tYWluICgvbGliL3g4Nl82NC1saW51eC1nbnUvbGliYy5zby42KzB4MjQwODIpIChCdWlsZElk
    OiAwNzAyNDMwYWVmNWZhM2RkYTQzOTg2NTYzZTlmZmNjNDdlZmJkNzVlKQogICAgICM5IDB4NTU1
    NTU1NTkwNmZkIGluIF9zdGFydCAoL291dC9maWxlaW5faGFybmVzcysweDNjNmZkKQogCiAweDU1
    NTU1NjBlNzliZSBpcyBsb2NhdGVkIDM0IGJ5dGVzIGJlZm9yZSBnbG9iYWwgdmFyaWFibGUgJ3Bp
    cGVmZCcgZGVmaW5lZCBpbiAnL3NyYy90ZXN0L2ZpbGVpbl9oYXJuZXNzLmM6OScgKDB4NTU1NTU2
    MGU3OWUwKSBvZiBzaXplIDgKIDB4NTU1NTU2MGU3OWJlIGlzIGxvY2F0ZWQgMCBieXRlcyBhZnRl
    ciBnbG9iYWwgdmFyaWFibGUgJ2l0ZW1zJyBkZWZpbmVkIGluICcvc3JjL3Rlc3QvLi8uLi9zYW1w
    bGVzL21vY2tfdnAuYzo1JyAoMHg1NTU1NTYwZTc5YTApIG9mIHNpemUgMzAKIFNVTU1BUlk6IEFk
    ZHJlc3NTYW5pdGl6ZXI6IGdsb2JhbC1idWZmZXItb3ZlcmZsb3cgL3NyYy9sbHZtLXByb2plY3Qv
    Y29tcGlsZXItcnQvbGliL2FzYW4vLi4vc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfY29tbW9u
    X2ludGVyY2VwdG9ycy5pbmM6MTIwNDo1IGluIGZnZXRzCiBTaGFkb3cgYnl0ZXMgYXJvdW5kIHRo
    ZSBidWdneSBhZGRyZXNzOgogICAweDU1NTU1NjBlNzcwMDogMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTc3ODA6IDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3ODAwOiAw
    MCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1
    NjBlNzg4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAK
    ICAgMHg1NTU1NTYwZTc5MDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwCiA9PjB4NTU1NTU2MGU3OTgwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMFswNl1mOSBm
    OSBmOSBmOSAwMCBmOSBmOSBmOQogICAweDU1NTU1NjBlN2EwMDogMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTdhODA6IDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3YjAw
    OiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1
    NTU1NjBlN2I4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAKICAgMHg1NTU1NTYwZTdjMDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwCiBTaGFkb3cgYnl0ZSBsZWdlbmQgKG9uZSBzaGFkb3cgYnl0ZSByZXByZXNl
    bnRzIDggYXBwbGljYXRpb24gYnl0ZXMpOgogICBBZGRyZXNzYWJsZTogICAgICAgICAgIDAwCiAg
    IFBhcnRpYWxseSBhZGRyZXNzYWJsZTogMDEgMDIgMDMgMDQgMDUgMDYgMDcgCiAgIEhlYXAgbGVm
    dCByZWR6b25lOiAgICAgICBmYQogICBGcmVlZCBoZWFwIHJlZ2lvbjogICAgICAgZmQKICAgU3Rh
    Y2sgbGVmdCByZWR6b25lOiAgICAgIGYxCiAgIFN0YWNrIG1pZCByZWR6b25lOiAgICAgICBmMgog
    ICBTdGFjayByaWdodCByZWR6b25lOiAgICAgZjMKICAgU3RhY2sgYWZ0ZXIgcmV0dXJuOiAgICAg
    IGY1CiAgIFN0YWNrIHVzZSBhZnRlciBzY29wZTogICBmOAogICBHbG9iYWwgcmVkem9uZTogICAg
    ICAgICAgZjkKICAgR2xvYmFsIGluaXQgb3JkZXI6ICAgICAgIGY2CiAgIFBvaXNvbmVkIGJ5IHVz
    ZXI6ICAgICAgICBmNwogICBDb250YWluZXIgb3ZlcmZsb3c6ICAgICAgZmMKICAgQXJyYXkgY29v
    a2llOiAgICAgICAgICAgIGFjCiAgIEludHJhIG9iamVjdCByZWR6b25lOiAgICBiYgogICBBU2Fu
    IGludGVybmFsOiAgICAgICAgICAgZmUKICAgTGVmdCBhbGxvY2EgcmVkem9uZTogICAgIGNhCiAg
    IFJpZ2h0IGFsbG9jYSByZWR6b25lOiAgICBjYgogPT0xND09QUJPUlRJTkcK
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720076656.8419256
  time_start: 1720076644.8510752
  time_taken: 11.990850448608398
target_id: 1
