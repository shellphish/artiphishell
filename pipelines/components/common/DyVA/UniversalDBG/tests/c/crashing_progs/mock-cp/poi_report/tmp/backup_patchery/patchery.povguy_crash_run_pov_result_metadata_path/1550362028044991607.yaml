cp_harness_binary_path: out/filein_harness
cp_harness_id: id_1
cp_harness_name: filein_harness
cp_harness_source_path: src/test/filein_harness.c
crash_report_id: 6a21f952c372514a5623e55700605492f74580ac0b08d552877f264d71c1ab37
fuzzer: libfuzzer
harness_id: id_1
harness_info_id: 7995481644139123086
original_crash_id: '1550362028044991607'
run_pov_result:
  cid: e9a18a84b9e3de0d0027fe3493792a460432a79e14de7896497058cb75925b28
  exitcode: 0
  pov:
    reports:
    - error_line: 'ERROR: AddressSanitizer: global-buffer-overflow on address 0x<REDACTED>
        at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
      report: "\n READ of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
        \ in printf_common(void*, char const*, __va_list_tag*) /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors_format.inc:563:9\n\
        \     #1 0x<REDACTED> in vprintf /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1641:1\n\
        \     #2 0x<REDACTED> in printf /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1699:1\n\
        \     #3 0x<REDACTED> in func_b /src/test/./../samples/mock_vp.c:27:5\n  \
        \   #4 0x<REDACTED> in LLVMFuzzerTestOneInput /src/test/filein_harness.c:55:3\n\
        \     #5 0x<REDACTED> in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n\
        \     #6 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
        \     #7 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
        \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
        \     #8 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
        \     #9 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
        \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #10 0x<REDACTED>\
        \ in _start (/out/filein_harness+0x3c6fd)\n \n 0x<REDACTED> is located <REDACTED>\
        \ bytes before global variable 'pipefd' defined in '/src/test/filein_harness.c:9'\
        \ (0x<REDACTED>) of size <REDACTED>\n 0x<REDACTED> is located <REDACTED> bytes\
        \ after global variable 'items' defined in '/src/test/./../samples/mock_vp.c:5'\
        \ (0x<REDACTED>) of size <REDACTED>\n SUMMARY: AddressSanitizer: global-buffer-overflow\
        \ /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors_format.inc:563:9\
        \ in printf_common(void*, char const*, __va_list_tag*)\n Shadow bytes around\
        \ the buggy address:\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\
        \   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>:\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n =>0x<REDACTED>: 00 00\
        \ 00 00 00 00 00 06 f9 f9[f9]f9 00 f9 f9 f9\n   0x<REDACTED>: 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00\n Shadow byte legend (one shadow byte represents 8 application\
        \ bytes):\n   Addressable:           00\n   Partially addressable: 01 02 03\
        \ 04 05 06 07 \n   Heap left redzone:       fa\n   Freed heap region:    \
        \   fd\n   Stack left redzone:      f1\n   Stack mid redzone:       f2\n \
        \  Stack right redzone:     f3\n   Stack after return:      f5\n   Stack use\
        \ after scope:   f8\n   Global redzone:          f9\n   Global init order:\
        \       f6\n   Poisoned by user:        f7\n   Container overflow:      fc\n\
        \   Array cookie:            ac\n   Intra object redzone:    bb\n   ASan internal:\
        \           fe\n   Left alloca redzone:     ca\n   Right alloca redzone: \
        \   cb\n <MARKER>ABORTING"
      stacktraces:
      - depth: 0
        func_name: printf_common
        line: 563
        signature: printf_common(void*, char const*, __va_list_tag*)
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors_format.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors_format.inc:563
        type: source
      - depth: 1
        func_name: vprintf
        line: 1641
        signature: vprintf
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:1641
        type: source
      - depth: 2
        func_name: printf
        line: 1699
        signature: printf
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:1699
        type: source
      - depth: 3
        func_name: func_b
        line: 27
        signature: func_b
        src_file: samples/mock_vp.c
        src_loc: samples/mock_vp.c:27
        type: source
      - depth: 4
        func_name: LLVMFuzzerTestOneInput
        line: 55
        signature: LLVMFuzzerTestOneInput
        src_file: test/filein_harness.c
        src_loc: test/filein_harness.c:55
        type: source
      - depth: 5
        func_name: fuzzer::Fuzzer::ExecuteCallback
        line: 614
        signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
          long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
        type: source
      - depth: 6
        func_name: fuzzer::RunOneTest
        line: 327
        signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
        type: source
      - depth: 7
        func_name: fuzzer::FuzzerDriver
        line: 862
        signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
          unsigned long))
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
        type: source
      - depth: 8
        func_name: main
        line: 20
        signature: main
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
        type: source
      - binary: ../lib/x86_64-linux-gnu/libc.so.6
        build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
        depth: 9
        func_name: __libc_start_main
        offset: 147586
        signature: __libc_start_main
        type: binary
      - binary: ../(/out/filein_harness+0x3c6fd)
        depth: 10
        func_name: _start
        signature: _start
        type: maybe_asan_interceptor
      triggered_sanitizers:
      - id_1
    triggered_sanitizers:
    - id_1
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDI0NjY2ODA4MjMKIElORk86IExvYWRlZCAxIG1vZHVsZXMgICAoNjkgaW5s
    aW5lIDgtYml0IGNvdW50ZXJzKTogNjkgWzB4NTU1NTU1NzVlMmMwLCAweDU1NTU1NTc1ZTMwNSks
    IAogSU5GTzogTG9hZGVkIDEgUEMgdGFibGVzICg2OSBQQ3MpOiA2OSBbMHg1NTU1NTU3NWUzMDgs
    MHg1NTU1NTU3NWU3NTgpLCAKIC9vdXQvZmlsZWluX2hhcm5lc3M6IFJ1bm5pbmcgMSBpbnB1dHMg
    MSB0aW1lKHMpIGVhY2guCiBSdW5uaW5nOiAvd29yay90bXBfYmxvYgogLi4vc2FtcGxlcy9tb2Nr
    X3ZwLmM6MjY6MTM6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IDUgb3V0IG9mIGJvdW5kcyBmb3IgdHlw
    ZSAnY2hhclszXVsxMF0nCiBTVU1NQVJZOiBVbmRlZmluZWRCZWhhdmlvclNhbml0aXplcjogdW5k
    ZWZpbmVkLWJlaGF2aW9yIC4uL3NhbXBsZXMvbW9ja192cC5jOjI2OjEzIGluIAogPT09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
    ID09MTQ9PUVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiBnbG9iYWwtYnVmZmVyLW92ZXJmbG93IG9u
    IGFkZHJlc3MgMHg1NTU1NTYwZTc5ZDIgYXQgcGMgMHg1NTU1NTU2NDY5ZjggYnAgMHg3ZmZmZmZm
    ZmUwNzAgc3AgMHg3ZmZmZmZmZmQ4MDAKIFJFQUQgb2Ygc2l6ZSAxIGF0IDB4NTU1NTU2MGU3OWQy
    IHRocmVhZCBUMAogICAgICMwIDB4NTU1NTU1NjQ2OWY3IGluIHByaW50Zl9jb21tb24odm9pZCos
    IGNoYXIgY29uc3QqLCBfX3ZhX2xpc3RfdGFnKikgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXIt
    cnQvbGliL2FzYW4vLi4vc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfY29tbW9uX2ludGVyY2Vw
    dG9yc19mb3JtYXQuaW5jOjU2Mzo5CiAgICAgIzEgMHg1NTU1NTU2NDg0ZGEgaW4gdnByaW50ZiAv
    c3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvYXNhbi8uLi9zYW5pdGl6ZXJfY29tbW9u
    L3Nhbml0aXplcl9jb21tb25faW50ZXJjZXB0b3JzLmluYzoxNjQxOjEKICAgICAjMiAweDU1NTU1
    NTY0ODRkYSBpbiBwcmludGYgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2FzYW4v
    Li4vc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfY29tbW9uX2ludGVyY2VwdG9ycy5pbmM6MTY5
    OToxCiAgICAgIzMgMHg1NTU1NTU2ZmIxM2QgaW4gZnVuY19iIC9zcmMvdGVzdC8uLy4uL3NhbXBs
    ZXMvbW9ja192cC5jOjI3OjUKICAgICAjNCAweDU1NTU1NTZmYjc3NiBpbiBMTFZNRnV6emVyVGVz
    dE9uZUlucHV0IC9zcmMvdGVzdC9maWxlaW5faGFybmVzcy5jOjU1OjMKICAgICAjNSAweDU1NTU1
    NTVhZjQ5MCBpbiBmdXp6ZXI6OkZ1enplcjo6RXhlY3V0ZUNhbGxiYWNrKHVuc2lnbmVkIGNoYXIg
    Y29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIv
    ZnV6emVyL0Z1enplckxvb3AuY3BwOjYxNDoxMwogICAgICM2IDB4NTU1NTU1NTk5YzI0IGluIGZ1
    enplcjo6UnVuT25lVGVzdChmdXp6ZXI6OkZ1enplciosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBs
    b25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplckRyaXZl
    ci5jcHA6MzI3OjYKICAgICAjNyAweDU1NTU1NTU5ZjZiYSBpbiBmdXp6ZXI6OkZ1enplckRyaXZl
    cihpbnQqLCBjaGFyKioqLCBpbnQgKCopKHVuc2lnbmVkIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBs
    b25nKSkgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2Z1enplci9GdXp6ZXJEcml2
    ZXIuY3BwOjg2Mjo5CiAgICAgIzggMHg1NTU1NTU1Y2JhYjIgaW4gbWFpbiAvc3JjL2xsdm0tcHJv
    amVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplck1haW4uY3BwOjIwOjEwCiAgICAgIzkg
    MHg3ZmZmZjdhNTkwODIgaW4gX19saWJjX3N0YXJ0X21haW4gKC9saWIveDg2XzY0LWxpbnV4LWdu
    dS9saWJjLnNvLjYrMHgyNDA4MikgKEJ1aWxkSWQ6IDA3MDI0MzBhZWY1ZmEzZGRhNDM5ODY1NjNl
    OWZmY2M0N2VmYmQ3NWUpCiAgICAgIzEwIDB4NTU1NTU1NTkwNmZkIGluIF9zdGFydCAoL291dC9m
    aWxlaW5faGFybmVzcysweDNjNmZkKQogCiAweDU1NTU1NjBlNzlkMiBpcyBsb2NhdGVkIDE0IGJ5
    dGVzIGJlZm9yZSBnbG9iYWwgdmFyaWFibGUgJ3BpcGVmZCcgZGVmaW5lZCBpbiAnL3NyYy90ZXN0
    L2ZpbGVpbl9oYXJuZXNzLmM6OScgKDB4NTU1NTU2MGU3OWUwKSBvZiBzaXplIDgKIDB4NTU1NTU2
    MGU3OWQyIGlzIGxvY2F0ZWQgMjAgYnl0ZXMgYWZ0ZXIgZ2xvYmFsIHZhcmlhYmxlICdpdGVtcycg
    ZGVmaW5lZCBpbiAnL3NyYy90ZXN0Ly4vLi4vc2FtcGxlcy9tb2NrX3ZwLmM6NScgKDB4NTU1NTU2
    MGU3OWEwKSBvZiBzaXplIDMwCiBTVU1NQVJZOiBBZGRyZXNzU2FuaXRpemVyOiBnbG9iYWwtYnVm
    ZmVyLW92ZXJmbG93IC9zcmMvbGx2bS1wcm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9hc2FuLy4uL3Nh
    bml0aXplcl9jb21tb24vc2FuaXRpemVyX2NvbW1vbl9pbnRlcmNlcHRvcnNfZm9ybWF0LmluYzo1
    NjM6OSBpbiBwcmludGZfY29tbW9uKHZvaWQqLCBjaGFyIGNvbnN0KiwgX192YV9saXN0X3RhZyop
    CiBTaGFkb3cgYnl0ZXMgYXJvdW5kIHRoZSBidWdneSBhZGRyZXNzOgogICAweDU1NTU1NjBlNzcw
    MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1
    NTU1NTYwZTc3ODA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwCiAgIDB4NTU1NTU2MGU3ODAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBlNzg4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTc5MDA6IDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiA9PjB4NTU1NTU2MGU3OTgwOiAwMCAw
    MCAwMCAwMCAwMCAwMCAwMCAwNiBmOSBmOVtmOV1mOSAwMCBmOSBmOSBmOQogICAweDU1NTU1NjBl
    N2EwMDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAg
    MHg1NTU1NTYwZTdhODA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwCiAgIDB4NTU1NTU2MGU3YjAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBlN2I4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTdjMDA6IDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiBTaGFkb3cgYnl0ZSBsZWdlbmQg
    KG9uZSBzaGFkb3cgYnl0ZSByZXByZXNlbnRzIDggYXBwbGljYXRpb24gYnl0ZXMpOgogICBBZGRy
    ZXNzYWJsZTogICAgICAgICAgIDAwCiAgIFBhcnRpYWxseSBhZGRyZXNzYWJsZTogMDEgMDIgMDMg
    MDQgMDUgMDYgMDcgCiAgIEhlYXAgbGVmdCByZWR6b25lOiAgICAgICBmYQogICBGcmVlZCBoZWFw
    IHJlZ2lvbjogICAgICAgZmQKICAgU3RhY2sgbGVmdCByZWR6b25lOiAgICAgIGYxCiAgIFN0YWNr
    IG1pZCByZWR6b25lOiAgICAgICBmMgogICBTdGFjayByaWdodCByZWR6b25lOiAgICAgZjMKICAg
    U3RhY2sgYWZ0ZXIgcmV0dXJuOiAgICAgIGY1CiAgIFN0YWNrIHVzZSBhZnRlciBzY29wZTogICBm
    OAogICBHbG9iYWwgcmVkem9uZTogICAgICAgICAgZjkKICAgR2xvYmFsIGluaXQgb3JkZXI6ICAg
    ICAgIGY2CiAgIFBvaXNvbmVkIGJ5IHVzZXI6ICAgICAgICBmNwogICBDb250YWluZXIgb3ZlcmZs
    b3c6ICAgICAgZmMKICAgQXJyYXkgY29va2llOiAgICAgICAgICAgIGFjCiAgIEludHJhIG9iamVj
    dCByZWR6b25lOiAgICBiYgogICBBU2FuIGludGVybmFsOiAgICAgICAgICAgZmUKICAgTGVmdCBh
    bGxvY2EgcmVkem9uZTogICAgIGNhCiAgIFJpZ2h0IGFsbG9jYSByZWR6b25lOiAgICBjYgogPT0x
    ND09QUJPUlRJTkcK
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720076739.8486063
  time_start: 1720076738.825584
  time_taken: 1.0230224132537842
target_id: 1
