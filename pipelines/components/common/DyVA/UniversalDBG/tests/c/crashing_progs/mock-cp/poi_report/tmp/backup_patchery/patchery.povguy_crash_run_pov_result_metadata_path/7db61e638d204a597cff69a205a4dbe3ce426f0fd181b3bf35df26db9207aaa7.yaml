cp_harness_binary_path: out/filein_harness
cp_harness_id: id_1
cp_harness_name: filein_harness
cp_harness_source_path: src/test/filein_harness.c
crash_report_id: 3cce21a653243d1c49164eb2226ee5dc41bc76f17ae89b35a9ac37006f17c786
fuzzer: aflplusplus
harness_info_id: 7995481644139123086
original_crash_id: 7db61e638d204a597cff69a205a4dbe3ce426f0fd181b3bf35df26db9207aaa7
run_pov_result:
  cid: 8a587243f125000d0068688cb4bebdd1e6a7a46bc54a9177f3a77f1e72d2beca
  exitcode: 0
  pov:
    reports:
    - error_line: 'ERROR: AddressSanitizer: global-buffer-overflow on address 0x<REDACTED>
        at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
      report: "\n READ of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
        \ in strcspn /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\n\
        \     #1 0x<REDACTED> in func_a /src/test/./../samples/mock_vp.c:15:14\n \
        \    #2 0x<REDACTED> in LLVMFuzzerTestOneInput /src/test/filein_harness.c:54:3\n\
        \     #3 0x<REDACTED> in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n\
        \     #4 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
        \     #5 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
        \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
        \     #6 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
        \     #7 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
        \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #8 0x<REDACTED>\
        \ in _start (/out/filein_harness+0x3c6fd)\n \n 0x<REDACTED> is located <REDACTED>\
        \ bytes before global variable 'pipefd' defined in '/src/test/filein_harness.c:9'\
        \ (0x<REDACTED>) of size <REDACTED>\n 0x<REDACTED> is located <REDACTED> bytes\
        \ after global variable 'items' defined in '/src/test/./../samples/mock_vp.c:5'\
        \ (0x<REDACTED>) of size <REDACTED>\n SUMMARY: AddressSanitizer: global-buffer-overflow\
        \ /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\
        \ in strcspn\n Shadow bytes around the buggy address:\n   0x<REDACTED>: 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00\n =>0x<REDACTED>: 00 00 00 00 00 00 00[06]f9 f9 f9\
        \ f9 00 f9 f9 f9\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n \
        \  0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>:\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n Shadow byte legend (one\
        \ shadow byte represents 8 application bytes):\n   Addressable:          \
        \ 00\n   Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:\
        \       fa\n   Freed heap region:       fd\n   Stack left redzone:      f1\n\
        \   Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack\
        \ after return:      f5\n   Stack use after scope:   f8\n   Global redzone:\
        \          f9\n   Global init order:       f6\n   Poisoned by user:      \
        \  f7\n   Container overflow:      fc\n   Array cookie:            ac\n  \
        \ Intra object redzone:    bb\n   ASan internal:           fe\n   Left alloca\
        \ redzone:     ca\n   Right alloca redzone:    cb\n <MARKER>ABORTING"
      stacktraces:
      - depth: 0
        func_name: strcspn
        line: 767
        signature: strcspn
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:767
        type: source
      - depth: 1
        func_name: func_a
        line: 15
        signature: func_a
        src_file: samples/mock_vp.c
        src_loc: samples/mock_vp.c:15
        type: source
      - depth: 2
        func_name: LLVMFuzzerTestOneInput
        line: 54
        signature: LLVMFuzzerTestOneInput
        src_file: test/filein_harness.c
        src_loc: test/filein_harness.c:54
        type: source
      - depth: 3
        func_name: fuzzer::Fuzzer::ExecuteCallback
        line: 614
        signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
          long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
        type: source
      - depth: 4
        func_name: fuzzer::RunOneTest
        line: 327
        signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
        type: source
      - depth: 5
        func_name: fuzzer::FuzzerDriver
        line: 862
        signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
          unsigned long))
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
        type: source
      - depth: 6
        func_name: main
        line: 20
        signature: main
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
        type: source
      - binary: ../lib/x86_64-linux-gnu/libc.so.6
        build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
        depth: 7
        func_name: __libc_start_main
        offset: 147586
        signature: __libc_start_main
        type: binary
      - binary: ../(/out/filein_harness+0x3c6fd)
        depth: 8
        func_name: _start
        signature: _start
        type: maybe_asan_interceptor
      triggered_sanitizers:
      - id_1
    triggered_sanitizers:
    - id_1
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDIzNzg4NDA5MTkKIElORk86IExvYWRlZCAxIG1vZHVsZXMgICAoNjkgaW5s
    aW5lIDgtYml0IGNvdW50ZXJzKTogNjkgWzB4NTU1NTU1NzVlMmMwLCAweDU1NTU1NTc1ZTMwNSks
    IAogSU5GTzogTG9hZGVkIDEgUEMgdGFibGVzICg2OSBQQ3MpOiA2OSBbMHg1NTU1NTU3NWUzMDgs
    MHg1NTU1NTU3NWU3NTgpLCAKIC9vdXQvZmlsZWluX2hhcm5lc3M6IFJ1bm5pbmcgMSBpbnB1dHMg
    MSB0aW1lKHMpIGVhY2guCiBSdW5uaW5nOiAvd29yay90bXBfYmxvYgogPT09PT09PT09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KID09MTQ9
    PUVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiBnbG9iYWwtYnVmZmVyLW92ZXJmbG93IG9uIGFkZHJl
    c3MgMHg1NTU1NTYwZTc5YmUgYXQgcGMgMHg1NTU1NTU2M2QwODYgYnAgMHg3ZmZmZmZmZmUxYjAg
    c3AgMHg3ZmZmZmZmZmQ5NzAKIFJFQUQgb2Ygc2l6ZSAyMyBhdCAweDU1NTU1NjBlNzliZSB0aHJl
    YWQgVDAKICAgICAjMCAweDU1NTU1NTYzZDA4NSBpbiBzdHJjc3BuIC9zcmMvbGx2bS1wcm9qZWN0
    L2NvbXBpbGVyLXJ0L2xpYi9hc2FuLy4uL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVyX2NvbW1v
    bl9pbnRlcmNlcHRvcnMuaW5jOjc2Nzo1CiAgICAgIzEgMHg1NTU1NTU2ZmFhZWEgaW4gZnVuY19h
    IC9zcmMvdGVzdC8uLy4uL3NhbXBsZXMvbW9ja192cC5jOjE1OjE0CiAgICAgIzIgMHg1NTU1NTU2
    ZmI3NzEgaW4gTExWTUZ1enplclRlc3RPbmVJbnB1dCAvc3JjL3Rlc3QvZmlsZWluX2hhcm5lc3Mu
    Yzo1NDozCiAgICAgIzMgMHg1NTU1NTU1YWY0OTAgaW4gZnV6emVyOjpGdXp6ZXI6OkV4ZWN1dGVD
    YWxsYmFjayh1bnNpZ25lZCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykgL3NyYy9sbHZtLXBy
    b2plY3QvY29tcGlsZXItcnQvbGliL2Z1enplci9GdXp6ZXJMb29wLmNwcDo2MTQ6MTMKICAgICAj
    NCAweDU1NTU1NTU5OWMyNCBpbiBmdXp6ZXI6OlJ1bk9uZVRlc3QoZnV6emVyOjpGdXp6ZXIqLCBj
    aGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQv
    bGliL2Z1enplci9GdXp6ZXJEcml2ZXIuY3BwOjMyNzo2CiAgICAgIzUgMHg1NTU1NTU1OWY2YmEg
    aW4gZnV6emVyOjpGdXp6ZXJEcml2ZXIoaW50KiwgY2hhcioqKiwgaW50ICgqKSh1bnNpZ25lZCBj
    aGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykpIC9zcmMvbGx2bS1wcm9qZWN0L2NvbXBpbGVyLXJ0
    L2xpYi9mdXp6ZXIvRnV6emVyRHJpdmVyLmNwcDo4NjI6OQogICAgICM2IDB4NTU1NTU1NWNiYWIy
    IGluIG1haW4gL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2Z1enplci9GdXp6ZXJN
    YWluLmNwcDoyMDoxMAogICAgICM3IDB4N2ZmZmY3YTU5MDgyIGluIF9fbGliY19zdGFydF9tYWlu
    ICgvbGliL3g4Nl82NC1saW51eC1nbnUvbGliYy5zby42KzB4MjQwODIpIChCdWlsZElkOiAwNzAy
    NDMwYWVmNWZhM2RkYTQzOTg2NTYzZTlmZmNjNDdlZmJkNzVlKQogICAgICM4IDB4NTU1NTU1NTkw
    NmZkIGluIF9zdGFydCAoL291dC9maWxlaW5faGFybmVzcysweDNjNmZkKQogCiAweDU1NTU1NjBl
    NzliZSBpcyBsb2NhdGVkIDM0IGJ5dGVzIGJlZm9yZSBnbG9iYWwgdmFyaWFibGUgJ3BpcGVmZCcg
    ZGVmaW5lZCBpbiAnL3NyYy90ZXN0L2ZpbGVpbl9oYXJuZXNzLmM6OScgKDB4NTU1NTU2MGU3OWUw
    KSBvZiBzaXplIDgKIDB4NTU1NTU2MGU3OWJlIGlzIGxvY2F0ZWQgMCBieXRlcyBhZnRlciBnbG9i
    YWwgdmFyaWFibGUgJ2l0ZW1zJyBkZWZpbmVkIGluICcvc3JjL3Rlc3QvLi8uLi9zYW1wbGVzL21v
    Y2tfdnAuYzo1JyAoMHg1NTU1NTYwZTc5YTApIG9mIHNpemUgMzAKIFNVTU1BUlk6IEFkZHJlc3NT
    YW5pdGl6ZXI6IGdsb2JhbC1idWZmZXItb3ZlcmZsb3cgL3NyYy9sbHZtLXByb2plY3QvY29tcGls
    ZXItcnQvbGliL2FzYW4vLi4vc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfY29tbW9uX2ludGVy
    Y2VwdG9ycy5pbmM6NzY3OjUgaW4gc3RyY3NwbgogU2hhZG93IGJ5dGVzIGFyb3VuZCB0aGUgYnVn
    Z3kgYWRkcmVzczoKICAgMHg1NTU1NTYwZTc3MDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3NzgwOiAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBlNzgwMDogMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTc4
    ODA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4
    NTU1NTU2MGU3OTAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMAogPT4weDU1NTU1NjBlNzk4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDBbMDZdZjkgZjkgZjkg
    ZjkgMDAgZjkgZjkgZjkKICAgMHg1NTU1NTYwZTdhMDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3YTgwOiAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBlN2IwMDogMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYw
    ZTdiODA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAg
    IDB4NTU1NTU2MGU3YzAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMAogU2hhZG93IGJ5dGUgbGVnZW5kIChvbmUgc2hhZG93IGJ5dGUgcmVwcmVzZW50cyA4
    IGFwcGxpY2F0aW9uIGJ5dGVzKToKICAgQWRkcmVzc2FibGU6ICAgICAgICAgICAwMAogICBQYXJ0
    aWFsbHkgYWRkcmVzc2FibGU6IDAxIDAyIDAzIDA0IDA1IDA2IDA3IAogICBIZWFwIGxlZnQgcmVk
    em9uZTogICAgICAgZmEKICAgRnJlZWQgaGVhcCByZWdpb246ICAgICAgIGZkCiAgIFN0YWNrIGxl
    ZnQgcmVkem9uZTogICAgICBmMQogICBTdGFjayBtaWQgcmVkem9uZTogICAgICAgZjIKICAgU3Rh
    Y2sgcmlnaHQgcmVkem9uZTogICAgIGYzCiAgIFN0YWNrIGFmdGVyIHJldHVybjogICAgICBmNQog
    ICBTdGFjayB1c2UgYWZ0ZXIgc2NvcGU6ICAgZjgKICAgR2xvYmFsIHJlZHpvbmU6ICAgICAgICAg
    IGY5CiAgIEdsb2JhbCBpbml0IG9yZGVyOiAgICAgICBmNgogICBQb2lzb25lZCBieSB1c2VyOiAg
    ICAgICAgZjcKICAgQ29udGFpbmVyIG92ZXJmbG93OiAgICAgIGZjCiAgIEFycmF5IGNvb2tpZTog
    ICAgICAgICAgICBhYwogICBJbnRyYSBvYmplY3QgcmVkem9uZTogICAgYmIKICAgQVNhbiBpbnRl
    cm5hbDogICAgICAgICAgIGZlCiAgIExlZnQgYWxsb2NhIHJlZHpvbmU6ICAgICBjYQogICBSaWdo
    dCBhbGxvY2EgcmVkem9uZTogICAgY2IKID09MTQ9PUFCT1JUSU5HCg==
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720076653.082032
  time_start: 1720076643.0510323
  time_taken: 10.030999660491943
target_id: 1
