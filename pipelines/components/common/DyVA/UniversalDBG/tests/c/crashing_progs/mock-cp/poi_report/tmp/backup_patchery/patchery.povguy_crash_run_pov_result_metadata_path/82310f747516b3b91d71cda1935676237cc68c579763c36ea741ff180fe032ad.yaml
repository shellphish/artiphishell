cp_harness_binary_path: out/filein_harness
cp_harness_id: id_1
cp_harness_name: filein_harness
cp_harness_source_path: src/test/filein_harness.c
crash_report_id: 1fa5ea5b25c402f02bfe6d0dc23672f2adb001dd68ad2963bc7a70cf218418ef
fuzzer: aflplusplus
harness_info_id: 7995481644139123086
original_crash_id: 82310f747516b3b91d71cda1935676237cc68c579763c36ea741ff180fe032ad
run_pov_result:
  cid: 0c63b47dcfc21e629177b5261c5e289f4ff951061616c46dd41a11c9ac909cef
  exitcode: 0
  pov:
    reports:
    - error_line: 'ERROR: AddressSanitizer: global-buffer-overflow on address 0x<REDACTED>
        at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
      report: "\n WRITE of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
        \ in fgets /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1204:5\n\
        \     #1 0x<REDACTED> in func_a /src/test/./../samples/mock_vp.c:14:9\n  \
        \   #2 0x<REDACTED> in LLVMFuzzerTestOneInput /src/test/filein_harness.c:54:3\n\
        \     #3 0x<REDACTED> in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n\
        \     #4 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
        \     #5 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
        \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
        \     #6 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
        \     #7 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
        \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #8 0x<REDACTED>\
        \ in _start (/out/filein_harness+0x3c6fd)\n \n 0x<REDACTED> is located <REDACTED>\
        \ bytes before global variable 'pipefd' defined in '/src/test/filein_harness.c:9'\
        \ (0x<REDACTED>) of size <REDACTED>\n 0x<REDACTED> is located <REDACTED> bytes\
        \ after global variable 'items' defined in '/src/test/./../samples/mock_vp.c:5'\
        \ (0x<REDACTED>) of size <REDACTED>\n SUMMARY: AddressSanitizer: global-buffer-overflow\
        \ /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1204:5\
        \ in fgets\n Shadow bytes around the buggy address:\n   0x<REDACTED>: 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00\n =>0x<REDACTED>: 00 00 00 00 00 00 00[06]f9 f9 f9 f9\
        \ 00 f9 f9 f9\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\
        \   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>:\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n Shadow byte legend (one shadow\
        \ byte represents 8 application bytes):\n   Addressable:           00\n  \
        \ Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:    \
        \   fa\n   Freed heap region:       fd\n   Stack left redzone:      f1\n \
        \  Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack after\
        \ return:      f5\n   Stack use after scope:   f8\n   Global redzone:    \
        \      f9\n   Global init order:       f6\n   Poisoned by user:        f7\n\
        \   Container overflow:      fc\n   Array cookie:            ac\n   Intra\
        \ object redzone:    bb\n   ASan internal:           fe\n   Left alloca redzone:\
        \     ca\n   Right alloca redzone:    cb\n <MARKER>ABORTING"
      stacktraces:
      - depth: 0
        func_name: fgets
        line: 1204
        signature: fgets
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:1204
        type: source
      - depth: 1
        func_name: func_a
        line: 14
        signature: func_a
        src_file: samples/mock_vp.c
        src_loc: samples/mock_vp.c:14
        type: source
      - depth: 2
        func_name: LLVMFuzzerTestOneInput
        line: 54
        signature: LLVMFuzzerTestOneInput
        src_file: test/filein_harness.c
        src_loc: test/filein_harness.c:54
        type: source
      - depth: 3
        func_name: fuzzer::Fuzzer::ExecuteCallback
        line: 614
        signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
          long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
        type: source
      - depth: 4
        func_name: fuzzer::RunOneTest
        line: 327
        signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
        type: source
      - depth: 5
        func_name: fuzzer::FuzzerDriver
        line: 862
        signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
          unsigned long))
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
        type: source
      - depth: 6
        func_name: main
        line: 20
        signature: main
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
        type: source
      - binary: ../lib/x86_64-linux-gnu/libc.so.6
        build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
        depth: 7
        func_name: __libc_start_main
        offset: 147586
        signature: __libc_start_main
        type: binary
      - binary: ../(/out/filein_harness+0x3c6fd)
        depth: 8
        func_name: _start
        signature: _start
        type: maybe_asan_interceptor
      triggered_sanitizers:
      - id_1
    triggered_sanitizers:
    - id_1
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDIzNzgwMjAyNjQKIElORk86IExvYWRlZCAxIG1vZHVsZXMgICAoNjkgaW5s
    aW5lIDgtYml0IGNvdW50ZXJzKTogNjkgWzB4NTU1NTU1NzVlMmMwLCAweDU1NTU1NTc1ZTMwNSks
    IAogSU5GTzogTG9hZGVkIDEgUEMgdGFibGVzICg2OSBQQ3MpOiA2OSBbMHg1NTU1NTU3NWUzMDgs
    MHg1NTU1NTU3NWU3NTgpLCAKIC9vdXQvZmlsZWluX2hhcm5lc3M6IFJ1bm5pbmcgMSBpbnB1dHMg
    MSB0aW1lKHMpIGVhY2guCiBSdW5uaW5nOiAvd29yay90bXBfYmxvYgogPT09PT09PT09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KID09MTQ9
    PUVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiBnbG9iYWwtYnVmZmVyLW92ZXJmbG93IG9uIGFkZHJl
    c3MgMHg1NTU1NTYwZTc5YmUgYXQgcGMgMHg1NTU1NTU2NDBhYmMgYnAgMHg3ZmZmZmZmZmUxYjAg
    c3AgMHg3ZmZmZmZmZmQ5NzgKIFdSSVRFIG9mIHNpemUgMzEgYXQgMHg1NTU1NTYwZTc5YmUgdGhy
    ZWFkIFQwCiAgICAgIzAgMHg1NTU1NTU2NDBhYmIgaW4gZmdldHMgL3NyYy9sbHZtLXByb2plY3Qv
    Y29tcGlsZXItcnQvbGliL2FzYW4vLi4vc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfY29tbW9u
    X2ludGVyY2VwdG9ycy5pbmM6MTIwNDo1CiAgICAgIzEgMHg1NTU1NTU2ZmFhNGUgaW4gZnVuY19h
    IC9zcmMvdGVzdC8uLy4uL3NhbXBsZXMvbW9ja192cC5jOjE0OjkKICAgICAjMiAweDU1NTU1NTZm
    Yjc3MSBpbiBMTFZNRnV6emVyVGVzdE9uZUlucHV0IC9zcmMvdGVzdC9maWxlaW5faGFybmVzcy5j
    OjU0OjMKICAgICAjMyAweDU1NTU1NTVhZjQ5MCBpbiBmdXp6ZXI6OkZ1enplcjo6RXhlY3V0ZUNh
    bGxiYWNrKHVuc2lnbmVkIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJv
    amVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplckxvb3AuY3BwOjYxNDoxMwogICAgICM0
    IDB4NTU1NTU1NTk5YzI0IGluIGZ1enplcjo6UnVuT25lVGVzdChmdXp6ZXI6OkZ1enplciosIGNo
    YXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9s
    aWIvZnV6emVyL0Z1enplckRyaXZlci5jcHA6MzI3OjYKICAgICAjNSAweDU1NTU1NTU5ZjZiYSBp
    biBmdXp6ZXI6OkZ1enplckRyaXZlcihpbnQqLCBjaGFyKioqLCBpbnQgKCopKHVuc2lnbmVkIGNo
    YXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSkgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQv
    bGliL2Z1enplci9GdXp6ZXJEcml2ZXIuY3BwOjg2Mjo5CiAgICAgIzYgMHg1NTU1NTU1Y2JhYjIg
    aW4gbWFpbiAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplck1h
    aW4uY3BwOjIwOjEwCiAgICAgIzcgMHg3ZmZmZjdhNTkwODIgaW4gX19saWJjX3N0YXJ0X21haW4g
    KC9saWIveDg2XzY0LWxpbnV4LWdudS9saWJjLnNvLjYrMHgyNDA4MikgKEJ1aWxkSWQ6IDA3MDI0
    MzBhZWY1ZmEzZGRhNDM5ODY1NjNlOWZmY2M0N2VmYmQ3NWUpCiAgICAgIzggMHg1NTU1NTU1OTA2
    ZmQgaW4gX3N0YXJ0ICgvb3V0L2ZpbGVpbl9oYXJuZXNzKzB4M2M2ZmQpCiAKIDB4NTU1NTU2MGU3
    OWJlIGlzIGxvY2F0ZWQgMzQgYnl0ZXMgYmVmb3JlIGdsb2JhbCB2YXJpYWJsZSAncGlwZWZkJyBk
    ZWZpbmVkIGluICcvc3JjL3Rlc3QvZmlsZWluX2hhcm5lc3MuYzo5JyAoMHg1NTU1NTYwZTc5ZTAp
    IG9mIHNpemUgOAogMHg1NTU1NTYwZTc5YmUgaXMgbG9jYXRlZCAwIGJ5dGVzIGFmdGVyIGdsb2Jh
    bCB2YXJpYWJsZSAnaXRlbXMnIGRlZmluZWQgaW4gJy9zcmMvdGVzdC8uLy4uL3NhbXBsZXMvbW9j
    a192cC5jOjUnICgweDU1NTU1NjBlNzlhMCkgb2Ygc2l6ZSAzMAogU1VNTUFSWTogQWRkcmVzc1Nh
    bml0aXplcjogZ2xvYmFsLWJ1ZmZlci1vdmVyZmxvdyAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxl
    ci1ydC9saWIvYXNhbi8uLi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9jb21tb25faW50ZXJj
    ZXB0b3JzLmluYzoxMjA0OjUgaW4gZmdldHMKIFNoYWRvdyBieXRlcyBhcm91bmQgdGhlIGJ1Z2d5
    IGFkZHJlc3M6CiAgIDB4NTU1NTU2MGU3NzAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBlNzc4MDogMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTc4MDA6IDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3ODgw
    OiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1
    NTU1NjBlNzkwMDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAKID0+MHg1NTU1NTYwZTc5ODA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwWzA2XWY5IGY5IGY5IGY5
    IDAwIGY5IGY5IGY5CiAgIDB4NTU1NTU2MGU3YTAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBlN2E4MDogMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTdiMDA6IDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3
    YjgwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAw
    eDU1NTU1NjBlN2MwMDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAKIFNoYWRvdyBieXRlIGxlZ2VuZCAob25lIHNoYWRvdyBieXRlIHJlcHJlc2VudHMgOCBh
    cHBsaWNhdGlvbiBieXRlcyk6CiAgIEFkZHJlc3NhYmxlOiAgICAgICAgICAgMDAKICAgUGFydGlh
    bGx5IGFkZHJlc3NhYmxlOiAwMSAwMiAwMyAwNCAwNSAwNiAwNyAKICAgSGVhcCBsZWZ0IHJlZHpv
    bmU6ICAgICAgIGZhCiAgIEZyZWVkIGhlYXAgcmVnaW9uOiAgICAgICBmZAogICBTdGFjayBsZWZ0
    IHJlZHpvbmU6ICAgICAgZjEKICAgU3RhY2sgbWlkIHJlZHpvbmU6ICAgICAgIGYyCiAgIFN0YWNr
    IHJpZ2h0IHJlZHpvbmU6ICAgICBmMwogICBTdGFjayBhZnRlciByZXR1cm46ICAgICAgZjUKICAg
    U3RhY2sgdXNlIGFmdGVyIHNjb3BlOiAgIGY4CiAgIEdsb2JhbCByZWR6b25lOiAgICAgICAgICBm
    OQogICBHbG9iYWwgaW5pdCBvcmRlcjogICAgICAgZjYKICAgUG9pc29uZWQgYnkgdXNlcjogICAg
    ICAgIGY3CiAgIENvbnRhaW5lciBvdmVyZmxvdzogICAgICBmYwogICBBcnJheSBjb29raWU6ICAg
    ICAgICAgICAgYWMKICAgSW50cmEgb2JqZWN0IHJlZHpvbmU6ICAgIGJiCiAgIEFTYW4gaW50ZXJu
    YWw6ICAgICAgICAgICBmZQogICBMZWZ0IGFsbG9jYSByZWR6b25lOiAgICAgY2EKICAgUmlnaHQg
    YWxsb2NhIHJlZHpvbmU6ICAgIGNiCiA9PTE0PT1BQk9SVElORwo=
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720076651.867097
  time_start: 1720076642.0841725
  time_taken: 9.78292441368103
target_id: 1
