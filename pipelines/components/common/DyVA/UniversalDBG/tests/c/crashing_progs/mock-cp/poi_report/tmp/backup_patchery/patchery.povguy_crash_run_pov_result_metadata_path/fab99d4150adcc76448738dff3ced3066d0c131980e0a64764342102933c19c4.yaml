cp_harness_binary_path: out/filein_harness
cp_harness_id: id_1
cp_harness_name: filein_harness
cp_harness_source_path: src/test/filein_harness.c
crash_report_id: 3cce21a653243d1c49164eb2226ee5dc41bc76f17ae89b35a9ac37006f17c786
fuzzer: aflplusplus
harness_info_id: 7995481644139123086
original_crash_id: fab99d4150adcc76448738dff3ced3066d0c131980e0a64764342102933c19c4
run_pov_result:
  cid: 29e49aa3ff4a873d883ef02cf1cd8b00f7dcb1542bac11021ee4c884789c630e
  exitcode: 0
  pov:
    reports:
    - error_line: 'ERROR: AddressSanitizer: global-buffer-overflow on address 0x<REDACTED>
        at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
      report: "\n READ of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
        \ in strcspn /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\n\
        \     #1 0x<REDACTED> in func_a /src/test/./../samples/mock_vp.c:15:14\n \
        \    #2 0x<REDACTED> in LLVMFuzzerTestOneInput /src/test/filein_harness.c:54:3\n\
        \     #3 0x<REDACTED> in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n\
        \     #4 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*,\
        \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
        \     #5 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
        \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
        \     #6 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
        \     #7 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
        \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #8 0x<REDACTED>\
        \ in _start (/out/filein_harness+0x3c6fd)\n \n 0x<REDACTED> is located <REDACTED>\
        \ bytes before global variable 'pipefd' defined in '/src/test/filein_harness.c:9'\
        \ (0x<REDACTED>) of size <REDACTED>\n 0x<REDACTED> is located <REDACTED> bytes\
        \ after global variable 'items' defined in '/src/test/./../samples/mock_vp.c:5'\
        \ (0x<REDACTED>) of size <REDACTED>\n SUMMARY: AddressSanitizer: global-buffer-overflow\
        \ /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\
        \ in strcspn\n Shadow bytes around the buggy address:\n   0x<REDACTED>: 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00\n =>0x<REDACTED>: 00 00 00 00 00 00 00[06]f9 f9 f9\
        \ f9 00 f9 f9 f9\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n \
        \  0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>:\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n Shadow byte legend (one\
        \ shadow byte represents 8 application bytes):\n   Addressable:          \
        \ 00\n   Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:\
        \       fa\n   Freed heap region:       fd\n   Stack left redzone:      f1\n\
        \   Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack\
        \ after return:      f5\n   Stack use after scope:   f8\n   Global redzone:\
        \          f9\n   Global init order:       f6\n   Poisoned by user:      \
        \  f7\n   Container overflow:      fc\n   Array cookie:            ac\n  \
        \ Intra object redzone:    bb\n   ASan internal:           fe\n   Left alloca\
        \ redzone:     ca\n   Right alloca redzone:    cb\n <MARKER>ABORTING"
      stacktraces:
      - depth: 0
        func_name: strcspn
        line: 767
        signature: strcspn
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:767
        type: source
      - depth: 1
        func_name: func_a
        line: 15
        signature: func_a
        src_file: samples/mock_vp.c
        src_loc: samples/mock_vp.c:15
        type: source
      - depth: 2
        func_name: LLVMFuzzerTestOneInput
        line: 54
        signature: LLVMFuzzerTestOneInput
        src_file: test/filein_harness.c
        src_loc: test/filein_harness.c:54
        type: source
      - depth: 3
        func_name: fuzzer::Fuzzer::ExecuteCallback
        line: 614
        signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
          long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
        type: source
      - depth: 4
        func_name: fuzzer::RunOneTest
        line: 327
        signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
        type: source
      - depth: 5
        func_name: fuzzer::FuzzerDriver
        line: 862
        signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
          unsigned long))
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
        type: source
      - depth: 6
        func_name: main
        line: 20
        signature: main
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
        type: source
      - binary: ../lib/x86_64-linux-gnu/libc.so.6
        build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
        depth: 7
        func_name: __libc_start_main
        offset: 147586
        signature: __libc_start_main
        type: binary
      - binary: ../(/out/filein_harness+0x3c6fd)
        depth: 8
        func_name: _start
        signature: _start
        type: maybe_asan_interceptor
      triggered_sanitizers:
      - id_1
    triggered_sanitizers:
    - id_1
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDIzNjk0MTA1NjYKIElORk86IExvYWRlZCAxIG1vZHVsZXMgICAoNjkgaW5s
    aW5lIDgtYml0IGNvdW50ZXJzKTogNjkgWzB4NTU1NTU1NzVlMmMwLCAweDU1NTU1NTc1ZTMwNSks
    IAogSU5GTzogTG9hZGVkIDEgUEMgdGFibGVzICg2OSBQQ3MpOiA2OSBbMHg1NTU1NTU3NWUzMDgs
    MHg1NTU1NTU3NWU3NTgpLCAKIC9vdXQvZmlsZWluX2hhcm5lc3M6IFJ1bm5pbmcgMSBpbnB1dHMg
    MSB0aW1lKHMpIGVhY2guCiBSdW5uaW5nOiAvd29yay90bXBfYmxvYgogLi4vc2FtcGxlcy9tb2Nr
    X3ZwLmM6MTI6MTc6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IDMgb3V0IG9mIGJvdW5kcyBmb3IgdHlw
    ZSAnY2hhclszXVsxMF0nCiBTVU1NQVJZOiBVbmRlZmluZWRCZWhhdmlvclNhbml0aXplcjogdW5k
    ZWZpbmVkLWJlaGF2aW9yIC4uL3NhbXBsZXMvbW9ja192cC5jOjEyOjE3IGluIAogPT09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
    ID09MTQ9PUVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiBnbG9iYWwtYnVmZmVyLW92ZXJmbG93IG9u
    IGFkZHJlc3MgMHg1NTU1NTYwZTc5YmUgYXQgcGMgMHg1NTU1NTU2M2QwODYgYnAgMHg3ZmZmZmZm
    ZmUxYjAgc3AgMHg3ZmZmZmZmZmQ5NzAKIFJFQUQgb2Ygc2l6ZSAxIGF0IDB4NTU1NTU2MGU3OWJl
    IHRocmVhZCBUMAogICAgICMwIDB4NTU1NTU1NjNkMDg1IGluIHN0cmNzcG4gL3NyYy9sbHZtLXBy
    b2plY3QvY29tcGlsZXItcnQvbGliL2FzYW4vLi4vc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJf
    Y29tbW9uX2ludGVyY2VwdG9ycy5pbmM6NzY3OjUKICAgICAjMSAweDU1NTU1NTZmYWFlYSBpbiBm
    dW5jX2EgL3NyYy90ZXN0Ly4vLi4vc2FtcGxlcy9tb2NrX3ZwLmM6MTU6MTQKICAgICAjMiAweDU1
    NTU1NTZmYjc3MSBpbiBMTFZNRnV6emVyVGVzdE9uZUlucHV0IC9zcmMvdGVzdC9maWxlaW5faGFy
    bmVzcy5jOjU0OjMKICAgICAjMyAweDU1NTU1NTVhZjQ5MCBpbiBmdXp6ZXI6OkZ1enplcjo6RXhl
    Y3V0ZUNhbGxiYWNrKHVuc2lnbmVkIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xs
    dm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplckxvb3AuY3BwOjYxNDoxMwog
    ICAgICM0IDB4NTU1NTU1NTk5YzI0IGluIGZ1enplcjo6UnVuT25lVGVzdChmdXp6ZXI6OkZ1enpl
    ciosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxl
    ci1ydC9saWIvZnV6emVyL0Z1enplckRyaXZlci5jcHA6MzI3OjYKICAgICAjNSAweDU1NTU1NTU5
    ZjZiYSBpbiBmdXp6ZXI6OkZ1enplckRyaXZlcihpbnQqLCBjaGFyKioqLCBpbnQgKCopKHVuc2ln
    bmVkIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSkgL3NyYy9sbHZtLXByb2plY3QvY29tcGls
    ZXItcnQvbGliL2Z1enplci9GdXp6ZXJEcml2ZXIuY3BwOjg2Mjo5CiAgICAgIzYgMHg1NTU1NTU1
    Y2JhYjIgaW4gbWFpbiAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1
    enplck1haW4uY3BwOjIwOjEwCiAgICAgIzcgMHg3ZmZmZjdhNTkwODIgaW4gX19saWJjX3N0YXJ0
    X21haW4gKC9saWIveDg2XzY0LWxpbnV4LWdudS9saWJjLnNvLjYrMHgyNDA4MikgKEJ1aWxkSWQ6
    IDA3MDI0MzBhZWY1ZmEzZGRhNDM5ODY1NjNlOWZmY2M0N2VmYmQ3NWUpCiAgICAgIzggMHg1NTU1
    NTU1OTA2ZmQgaW4gX3N0YXJ0ICgvb3V0L2ZpbGVpbl9oYXJuZXNzKzB4M2M2ZmQpCiAKIDB4NTU1
    NTU2MGU3OWJlIGlzIGxvY2F0ZWQgMzQgYnl0ZXMgYmVmb3JlIGdsb2JhbCB2YXJpYWJsZSAncGlw
    ZWZkJyBkZWZpbmVkIGluICcvc3JjL3Rlc3QvZmlsZWluX2hhcm5lc3MuYzo5JyAoMHg1NTU1NTYw
    ZTc5ZTApIG9mIHNpemUgOAogMHg1NTU1NTYwZTc5YmUgaXMgbG9jYXRlZCAwIGJ5dGVzIGFmdGVy
    IGdsb2JhbCB2YXJpYWJsZSAnaXRlbXMnIGRlZmluZWQgaW4gJy9zcmMvdGVzdC8uLy4uL3NhbXBs
    ZXMvbW9ja192cC5jOjUnICgweDU1NTU1NjBlNzlhMCkgb2Ygc2l6ZSAzMAogU1VNTUFSWTogQWRk
    cmVzc1Nhbml0aXplcjogZ2xvYmFsLWJ1ZmZlci1vdmVyZmxvdyAvc3JjL2xsdm0tcHJvamVjdC9j
    b21waWxlci1ydC9saWIvYXNhbi8uLi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9jb21tb25f
    aW50ZXJjZXB0b3JzLmluYzo3Njc6NSBpbiBzdHJjc3BuCiBTaGFkb3cgYnl0ZXMgYXJvdW5kIHRo
    ZSBidWdneSBhZGRyZXNzOgogICAweDU1NTU1NjBlNzcwMDogMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTc3ODA6IDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3ODAwOiAw
    MCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1
    NjBlNzg4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAK
    ICAgMHg1NTU1NTYwZTc5MDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwCiA9PjB4NTU1NTU2MGU3OTgwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMFswNl1mOSBm
    OSBmOSBmOSAwMCBmOSBmOSBmOQogICAweDU1NTU1NjBlN2EwMDogMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTdhODA6IDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3YjAw
    OiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1
    NTU1NjBlN2I4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAKICAgMHg1NTU1NTYwZTdjMDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwCiBTaGFkb3cgYnl0ZSBsZWdlbmQgKG9uZSBzaGFkb3cgYnl0ZSByZXByZXNl
    bnRzIDggYXBwbGljYXRpb24gYnl0ZXMpOgogICBBZGRyZXNzYWJsZTogICAgICAgICAgIDAwCiAg
    IFBhcnRpYWxseSBhZGRyZXNzYWJsZTogMDEgMDIgMDMgMDQgMDUgMDYgMDcgCiAgIEhlYXAgbGVm
    dCByZWR6b25lOiAgICAgICBmYQogICBGcmVlZCBoZWFwIHJlZ2lvbjogICAgICAgZmQKICAgU3Rh
    Y2sgbGVmdCByZWR6b25lOiAgICAgIGYxCiAgIFN0YWNrIG1pZCByZWR6b25lOiAgICAgICBmMgog
    ICBTdGFjayByaWdodCByZWR6b25lOiAgICAgZjMKICAgU3RhY2sgYWZ0ZXIgcmV0dXJuOiAgICAg
    IGY1CiAgIFN0YWNrIHVzZSBhZnRlciBzY29wZTogICBmOAogICBHbG9iYWwgcmVkem9uZTogICAg
    ICAgICAgZjkKICAgR2xvYmFsIGluaXQgb3JkZXI6ICAgICAgIGY2CiAgIFBvaXNvbmVkIGJ5IHVz
    ZXI6ICAgICAgICBmNwogICBDb250YWluZXIgb3ZlcmZsb3c6ICAgICAgZmMKICAgQXJyYXkgY29v
    a2llOiAgICAgICAgICAgIGFjCiAgIEludHJhIG9iamVjdCByZWR6b25lOiAgICBiYgogICBBU2Fu
    IGludGVybmFsOiAgICAgICAgICAgZmUKICAgTGVmdCBhbGxvY2EgcmVkem9uZTogICAgIGNhCiAg
    IFJpZ2h0IGFsbG9jYSByZWR6b25lOiAgICBjYgogPT0xND09QUJPUlRJTkcK
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720076643.2770822
  time_start: 1720076631.2233527
  time_taken: 12.05372953414917
target_id: 1
