consistent_sanitizers: &id001
- id_1
cp_harness_binary_path: out/fuzz_lua
cp_harness_id: id_1
cp_harness_name: fuzz_lua
cp_harness_source_path: src/lua/FAILED_TO_LOCATE
crash_report_id: 555f1f8b8724fbc2869df3ad6e939235
fuzzer: aflplusplus
harness_info_id: 331651d90ca932dc0ff5c3902d2627d8
inconsistent_sanitizers: &id002 []
original_crash_id: '1'
run_pov_result:
  cid: 9874c9dadfdaa595c60263f625926f0fce8c85b7cb60078e5b487160222a7ad8
  exitcode: 0
  pov:
    asan:
      reports:
      - error_line: 'ERROR: AddressSanitizer: heap-use-after-free on address 0x<REDACTED>
          at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
        report: "\n WRITE of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
          \ in lua_closeslot /src/lua/lapi.c:210:3\n     #1 0x<REDACTED> in luaL_pushresult\
          \ /src/lua/lauxlib.c:586:5\n     #2 0x<REDACTED> in luaL_traceback /src/lua/lauxlib.c:163:3\n\
          \     #3 0x<REDACTED> in msghandler /src/lua/fuzz_lua.c:111:3\n     #4 0x<REDACTED>\
          \ in luaD_precall /src/lua/ldo.c:512:11\n     #5 0x<REDACTED> in ccall /src/lua/ldo.c:555:13\n\
          \     #6 0x<REDACTED> in luaD_callnoyield /src/lua/ldo.c:575:3\n     #7\
          \ 0x<REDACTED> in luaG_errormsg /src/lua/ldebug.c:765:5\n     #8 0x<REDACTED>\
          \ in luaG_runerror /src/lua/ldebug.c:781:3\n     #9 0x<REDACTED> in luaG_typeerror\
          \ /src/lua/ldebug.c:687:3\n     #10 0x<REDACTED> in luaG_opinterror /src/lua/ldebug.c:720:3\n\
          \     #11 0x<REDACTED> in luaT_trybinTM /src/lua/ltm.c\n     #12 0x<REDACTED>\
          \ in luaT_trybinassocTM /src/lua/ltm.c:179:5\n     #13 0x<REDACTED> in luaV_execute\
          \ /src/lua/lvm.c:1484:9\n     #14 0x<REDACTED> in ccall /src/lua/ldo.c:557:5\n\
          \     #15 0x<REDACTED> in luaD_callnoyield /src/lua/ldo.c:575:3\n     #16\
          \ 0x<REDACTED> in luaD_rawrunprotected /src/lua/ldo.c:144:3\n     #17 0x<REDACTED>\
          \ in luaD_pcall /src/lua/ldo.c:864:12\n     #18 0x<REDACTED> in lua_pcallk\
          \ /src/lua/lapi.c:1057:14\n     #19 0x<REDACTED> in docall /src/lua/fuzz_lua.c:127:12\n\
          \     #20 0x<REDACTED> in dochunk /src/lua/fuzz_lua.c:135:34\n     #21 0x<REDACTED>\
          \ in LLVMFuzzerTestOneInput /src/lua/fuzz_lua.c:150:5\n     #22 0x<REDACTED>\
          \ in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)\
          \ /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n     #23\
          \ 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned\
          \ long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
          \     #24 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
          \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
          \     #25 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
          \     #26 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
          \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #27 0x<REDACTED>\
          \ in _start (/out/fuzz_lua+0x6874d)\n \n 0x<REDACTED> is located <REDACTED>\
          \ bytes inside of 880-byte region [0x<REDACTED>,0x<REDACTED>)\n freed by\
          \ thread T0 here:\n     #0 0x<REDACTED> in realloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:85:3\n\
          \     #1 0x<REDACTED> in luaM_realloc_ /src/lua/lmem.c:166:14\n     #2 0x<REDACTED>\
          \ in luaD_reallocstack /src/lua/ldo.c:184:20\n     #3 0x<REDACTED> in luaD_growstack\
          \ /src/lua/ldo.c:224:14\n     #4 0x<REDACTED> in luaD_precall /src/lua/ldo.c:500:7\n\
          \     #5 0x<REDACTED> in ccall /src/lua/ldo.c:555:13\n     #6 0x<REDACTED>\
          \ in luaD_callnoyield /src/lua/ldo.c:575:3\n     #7 0x<REDACTED> in luaF_close\
          \ /src/lua/lfunc.c:211:7\n     #8 0x<REDACTED> in lua_closeslot /src/lua/lapi.c:209:3\n\
          \     #9 0x<REDACTED> in luaL_pushresult /src/lua/lauxlib.c:586:5\n    \
          \ #10 0x<REDACTED> in luaL_traceback /src/lua/lauxlib.c:163:3\n     #11\
          \ 0x<REDACTED> in msghandler /src/lua/fuzz_lua.c:111:3\n     #12 0x<REDACTED>\
          \ in luaD_precall /src/lua/ldo.c:512:11\n     #13 0x<REDACTED> in ccall\
          \ /src/lua/ldo.c:555:13\n     #14 0x<REDACTED> in luaD_callnoyield /src/lua/ldo.c:575:3\n\
          \     #15 0x<REDACTED> in luaG_errormsg /src/lua/ldebug.c:765:5\n     #16\
          \ 0x<REDACTED> in luaG_runerror /src/lua/ldebug.c:781:3\n     #17 0x<REDACTED>\
          \ in luaG_typeerror /src/lua/ldebug.c:687:3\n     #18 0x<REDACTED> in luaG_opinterror\
          \ /src/lua/ldebug.c:720:3\n     #19 0x<REDACTED> in luaT_trybinTM /src/lua/ltm.c\n\
          \     #20 0x<REDACTED> in luaT_trybinassocTM /src/lua/ltm.c:179:5\n    \
          \ #21 0x<REDACTED> in luaV_execute /src/lua/lvm.c:1484:9\n     #22 0x<REDACTED>\
          \ in ccall /src/lua/ldo.c:557:5\n     #23 0x<REDACTED> in luaD_callnoyield\
          \ /src/lua/ldo.c:575:3\n     #24 0x<REDACTED> in luaD_rawrunprotected /src/lua/ldo.c:144:3\n\
          \     #25 0x<REDACTED> in luaD_pcall /src/lua/ldo.c:864:12\n     #26 0x<REDACTED>\
          \ in lua_pcallk /src/lua/lapi.c:1057:14\n     #27 0x<REDACTED> in docall\
          \ /src/lua/fuzz_lua.c:127:12\n     #28 0x<REDACTED> in dochunk /src/lua/fuzz_lua.c:135:34\n\
          \     #29 0x<REDACTED> in LLVMFuzzerTestOneInput /src/lua/fuzz_lua.c:150:5\n\
          \     #30 0x<REDACTED> in fuzzer::Fuzzer::ExecuteCallback(unsigned char\
          \ const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n\
          \     #31 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*,\
          \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
          \     #32 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
          \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
          \     #33 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
          \     #34 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
          \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n \n previously allocated\
          \ by thread T0 here:\n     #0 0x<REDACTED> in realloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:85:3\n\
          \     #1 0x<REDACTED> in luaM_realloc_ /src/lua/lmem.c:166:14\n     #2 0x<REDACTED>\
          \ in luaD_reallocstack /src/lua/ldo.c:184:20\n     #3 0x<REDACTED> in luaD_shrinkstack\
          \ /src/lua/ldo.c:272:5\n     #4 0x<REDACTED> in traversethread /src/lua/lgc.c:644:5\n\
          \     #5 0x<REDACTED> in propagatemark /src/lua/lgc.c:662:30\n     #6 0x<REDACTED>\
          \ in incstep /src/lua/lgc.c:1652:19\n     #7 0x<REDACTED> in luaC_step /src/lua/lgc.c:1673:7\n\
          \     #8 0x<REDACTED> in luaG_runerror /src/lua/ldebug.c:775:3\n     #9\
          \ 0x<REDACTED> in luaG_typeerror /src/lua/ldebug.c:687:3\n     #10 0x<REDACTED>\
          \ in luaG_opinterror /src/lua/ldebug.c:720:3\n     #11 0x<REDACTED> in luaT_trybinTM\
          \ /src/lua/ltm.c\n     #12 0x<REDACTED> in luaT_trybinassocTM /src/lua/ltm.c:179:5\n\
          \     #13 0x<REDACTED> in luaV_execute /src/lua/lvm.c:1484:9\n     #14 0x<REDACTED>\
          \ in ccall /src/lua/ldo.c:557:5\n     #15 0x<REDACTED> in luaD_callnoyield\
          \ /src/lua/ldo.c:575:3\n     #16 0x<REDACTED> in luaD_rawrunprotected /src/lua/ldo.c:144:3\n\
          \     #17 0x<REDACTED> in luaD_pcall /src/lua/ldo.c:864:12\n     #18 0x<REDACTED>\
          \ in lua_pcallk /src/lua/lapi.c:1057:14\n     #19 0x<REDACTED> in docall\
          \ /src/lua/fuzz_lua.c:127:12\n     #20 0x<REDACTED> in dochunk /src/lua/fuzz_lua.c:135:34\n\
          \     #21 0x<REDACTED> in LLVMFuzzerTestOneInput /src/lua/fuzz_lua.c:150:5\n\
          \     #22 0x<REDACTED> in fuzzer::Fuzzer::ExecuteCallback(unsigned char\
          \ const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n\
          \     #23 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*,\
          \ unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
          \     #24 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
          \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
          \     #25 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
          \     #26 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
          \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n \n SUMMARY: AddressSanitizer:\
          \ heap-use-after-free /src/lua/lapi.c:210:3 in lua_closeslot\n Shadow bytes\
          \ around the buggy address:\n   0x<REDACTED>: 00 00 00 00 fa fa fa fa fa\
          \ fa fa fa fa fa fa fa\n   0x<REDACTED>: fa fa fa fa fa fa fa fa fa fa fa\
          \ fa fa fa fa fa\n   0x<REDACTED>: fd fd fd fd fd fd fd fd fd fd fd fd fd\
          \ fd fd fd\n   0x<REDACTED>: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\
          \ fd\n   0x<REDACTED>: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n\
          \ =>0x<REDACTED>: fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd fd fd\n   0x<REDACTED>:\
          \ fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n   0x<REDACTED>: fd fd\
          \ fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n   0x<REDACTED>: fd fd fd fd\
          \ fd fd fd fd fd fd fd fd fd fd fa fa\n   0x<REDACTED>: fa fa fa fa fa fa\
          \ fa fa fa fa fa fa fa fa fa fa\n   0x<REDACTED>: fa fa fa fa fa fa fa fa\
          \ fa fa fa fa fa fa fa fa\n Shadow byte legend (one shadow byte represents\
          \ 8 application bytes):\n   Addressable:           00\n   Partially addressable:\
          \ 01 02 03 04 05 06 07 \n   Heap left redzone:       fa\n   Freed heap region:\
          \       fd\n   Stack left redzone:      f1\n   Stack mid redzone:      \
          \ f2\n   Stack right redzone:     f3\n   Stack after return:      f5\n \
          \  Stack use after scope:   f8\n   Global redzone:          f9\n   Global\
          \ init order:       f6\n   Poisoned by user:        f7\n   Container overflow:\
          \      fc\n   Array cookie:            ac\n   Intra object redzone:    bb\n\
          \   ASan internal:           fe\n   Left alloca redzone:     ca\n   Right\
          \ alloca redzone:    cb\n <MARKER>ABORTING"
        stacktraces:
        - depth: 0
          func_name: lua_closeslot
          line: 210
          signature: lua_closeslot
          src_file: lua/lapi.c
          src_loc: lua/lapi.c:210
          type: source
        - depth: 1
          func_name: luaL_pushresult
          line: 586
          signature: luaL_pushresult
          src_file: lua/lauxlib.c
          src_loc: lua/lauxlib.c:586
          type: source
        - depth: 2
          func_name: luaL_traceback
          line: 163
          signature: luaL_traceback
          src_file: lua/lauxlib.c
          src_loc: lua/lauxlib.c:163
          type: source
        - depth: 3
          func_name: msghandler
          line: 111
          signature: msghandler
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:111
          type: source
        - depth: 4
          func_name: luaD_precall
          line: 512
          signature: luaD_precall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:512
          type: source
        - depth: 5
          func_name: ccall
          line: 555
          signature: ccall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:555
          type: source
        - depth: 6
          func_name: luaD_callnoyield
          line: 575
          signature: luaD_callnoyield
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:575
          type: source
        - depth: 7
          func_name: luaG_errormsg
          line: 765
          signature: luaG_errormsg
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:765
          type: source
        - depth: 8
          func_name: luaG_runerror
          line: 781
          signature: luaG_runerror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:781
          type: source
        - depth: 9
          func_name: luaG_typeerror
          line: 687
          signature: luaG_typeerror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:687
          type: source
        - depth: 10
          func_name: luaG_opinterror
          line: 720
          signature: luaG_opinterror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:720
          type: source
        - binary: lua/ltm.c
          depth: 11
          func_name: luaT_trybinTM
          signature: luaT_trybinTM
          type: maybe_asan_interceptor
        - depth: 12
          func_name: luaT_trybinassocTM
          line: 179
          signature: luaT_trybinassocTM
          src_file: lua/ltm.c
          src_loc: lua/ltm.c:179
          type: source
        - depth: 13
          func_name: luaV_execute
          line: 1484
          signature: luaV_execute
          src_file: lua/lvm.c
          src_loc: lua/lvm.c:1484
          type: source
        - depth: 14
          func_name: ccall
          line: 557
          signature: ccall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:557
          type: source
        - depth: 15
          func_name: luaD_callnoyield
          line: 575
          signature: luaD_callnoyield
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:575
          type: source
        - depth: 16
          func_name: luaD_rawrunprotected
          line: 144
          signature: luaD_rawrunprotected
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:144
          type: source
        - depth: 17
          func_name: luaD_pcall
          line: 864
          signature: luaD_pcall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:864
          type: source
        - depth: 18
          func_name: lua_pcallk
          line: 1057
          signature: lua_pcallk
          src_file: lua/lapi.c
          src_loc: lua/lapi.c:1057
          type: source
        - depth: 19
          func_name: docall
          line: 127
          signature: docall
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:127
          type: source
        - depth: 20
          func_name: dochunk
          line: 135
          signature: dochunk
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:135
          type: source
        - depth: 21
          func_name: LLVMFuzzerTestOneInput
          line: 150
          signature: LLVMFuzzerTestOneInput
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:150
          type: source
        - depth: 22
          func_name: fuzzer::Fuzzer::ExecuteCallback
          line: 614
          signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
            long)
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
          type: source
        - depth: 23
          func_name: fuzzer::RunOneTest
          line: 327
          signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
          type: source
        - depth: 24
          func_name: fuzzer::FuzzerDriver
          line: 862
          signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
            unsigned long))
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
          type: source
        - depth: 25
          func_name: main
          line: 20
          signature: main
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
          type: source
        - binary: ../lib/x86_64-linux-gnu/libc.so.6
          build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
          depth: 26
          func_name: __libc_start_main
          offset: 147586
          signature: __libc_start_main
          type: binary
        - binary: ../(/out/fuzz_lua+0x6874d)
          depth: 27
          func_name: _start
          signature: _start
          type: maybe_asan_interceptor
        - depth: 0
          func_name: realloc
          line: 85
          signature: realloc
          src_file: llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp
          src_loc: llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:85
          type: source
        - depth: 1
          func_name: luaM_realloc_
          line: 166
          signature: luaM_realloc_
          src_file: lua/lmem.c
          src_loc: lua/lmem.c:166
          type: source
        - depth: 2
          func_name: luaD_reallocstack
          line: 184
          signature: luaD_reallocstack
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:184
          type: source
        - depth: 3
          func_name: luaD_growstack
          line: 224
          signature: luaD_growstack
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:224
          type: source
        - depth: 4
          func_name: luaD_precall
          line: 500
          signature: luaD_precall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:500
          type: source
        - depth: 5
          func_name: ccall
          line: 555
          signature: ccall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:555
          type: source
        - depth: 6
          func_name: luaD_callnoyield
          line: 575
          signature: luaD_callnoyield
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:575
          type: source
        - depth: 7
          func_name: luaF_close
          line: 211
          signature: luaF_close
          src_file: lua/lfunc.c
          src_loc: lua/lfunc.c:211
          type: source
        - depth: 8
          func_name: lua_closeslot
          line: 209
          signature: lua_closeslot
          src_file: lua/lapi.c
          src_loc: lua/lapi.c:209
          type: source
        - depth: 9
          func_name: luaL_pushresult
          line: 586
          signature: luaL_pushresult
          src_file: lua/lauxlib.c
          src_loc: lua/lauxlib.c:586
          type: source
        - depth: 10
          func_name: luaL_traceback
          line: 163
          signature: luaL_traceback
          src_file: lua/lauxlib.c
          src_loc: lua/lauxlib.c:163
          type: source
        - depth: 11
          func_name: msghandler
          line: 111
          signature: msghandler
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:111
          type: source
        - depth: 12
          func_name: luaD_precall
          line: 512
          signature: luaD_precall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:512
          type: source
        - depth: 13
          func_name: ccall
          line: 555
          signature: ccall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:555
          type: source
        - depth: 14
          func_name: luaD_callnoyield
          line: 575
          signature: luaD_callnoyield
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:575
          type: source
        - depth: 15
          func_name: luaG_errormsg
          line: 765
          signature: luaG_errormsg
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:765
          type: source
        - depth: 16
          func_name: luaG_runerror
          line: 781
          signature: luaG_runerror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:781
          type: source
        - depth: 17
          func_name: luaG_typeerror
          line: 687
          signature: luaG_typeerror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:687
          type: source
        - depth: 18
          func_name: luaG_opinterror
          line: 720
          signature: luaG_opinterror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:720
          type: source
        - binary: lua/ltm.c
          depth: 19
          func_name: luaT_trybinTM
          signature: luaT_trybinTM
          type: maybe_asan_interceptor
        - depth: 20
          func_name: luaT_trybinassocTM
          line: 179
          signature: luaT_trybinassocTM
          src_file: lua/ltm.c
          src_loc: lua/ltm.c:179
          type: source
        - depth: 21
          func_name: luaV_execute
          line: 1484
          signature: luaV_execute
          src_file: lua/lvm.c
          src_loc: lua/lvm.c:1484
          type: source
        - depth: 22
          func_name: ccall
          line: 557
          signature: ccall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:557
          type: source
        - depth: 23
          func_name: luaD_callnoyield
          line: 575
          signature: luaD_callnoyield
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:575
          type: source
        - depth: 24
          func_name: luaD_rawrunprotected
          line: 144
          signature: luaD_rawrunprotected
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:144
          type: source
        - depth: 25
          func_name: luaD_pcall
          line: 864
          signature: luaD_pcall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:864
          type: source
        - depth: 26
          func_name: lua_pcallk
          line: 1057
          signature: lua_pcallk
          src_file: lua/lapi.c
          src_loc: lua/lapi.c:1057
          type: source
        - depth: 27
          func_name: docall
          line: 127
          signature: docall
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:127
          type: source
        - depth: 28
          func_name: dochunk
          line: 135
          signature: dochunk
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:135
          type: source
        - depth: 29
          func_name: LLVMFuzzerTestOneInput
          line: 150
          signature: LLVMFuzzerTestOneInput
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:150
          type: source
        - depth: 30
          func_name: fuzzer::Fuzzer::ExecuteCallback
          line: 614
          signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
            long)
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
          type: source
        - depth: 31
          func_name: fuzzer::RunOneTest
          line: 327
          signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
          type: source
        - depth: 32
          func_name: fuzzer::FuzzerDriver
          line: 862
          signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
            unsigned long))
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
          type: source
        - depth: 33
          func_name: main
          line: 20
          signature: main
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
          type: source
        - binary: ../lib/x86_64-linux-gnu/libc.so.6
          build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
          depth: 34
          func_name: __libc_start_main
          offset: 147586
          signature: __libc_start_main
          type: binary
        - depth: 0
          func_name: realloc
          line: 85
          signature: realloc
          src_file: llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp
          src_loc: llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:85
          type: source
        - depth: 1
          func_name: luaM_realloc_
          line: 166
          signature: luaM_realloc_
          src_file: lua/lmem.c
          src_loc: lua/lmem.c:166
          type: source
        - depth: 2
          func_name: luaD_reallocstack
          line: 184
          signature: luaD_reallocstack
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:184
          type: source
        - depth: 3
          func_name: luaD_shrinkstack
          line: 272
          signature: luaD_shrinkstack
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:272
          type: source
        - depth: 4
          func_name: traversethread
          line: 644
          signature: traversethread
          src_file: lua/lgc.c
          src_loc: lua/lgc.c:644
          type: source
        - depth: 5
          func_name: propagatemark
          line: 662
          signature: propagatemark
          src_file: lua/lgc.c
          src_loc: lua/lgc.c:662
          type: source
        - depth: 6
          func_name: incstep
          line: 1652
          signature: incstep
          src_file: lua/lgc.c
          src_loc: lua/lgc.c:1652
          type: source
        - depth: 7
          func_name: luaC_step
          line: 1673
          signature: luaC_step
          src_file: lua/lgc.c
          src_loc: lua/lgc.c:1673
          type: source
        - depth: 8
          func_name: luaG_runerror
          line: 775
          signature: luaG_runerror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:775
          type: source
        - depth: 9
          func_name: luaG_typeerror
          line: 687
          signature: luaG_typeerror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:687
          type: source
        - depth: 10
          func_name: luaG_opinterror
          line: 720
          signature: luaG_opinterror
          src_file: lua/ldebug.c
          src_loc: lua/ldebug.c:720
          type: source
        - binary: lua/ltm.c
          depth: 11
          func_name: luaT_trybinTM
          signature: luaT_trybinTM
          type: maybe_asan_interceptor
        - depth: 12
          func_name: luaT_trybinassocTM
          line: 179
          signature: luaT_trybinassocTM
          src_file: lua/ltm.c
          src_loc: lua/ltm.c:179
          type: source
        - depth: 13
          func_name: luaV_execute
          line: 1484
          signature: luaV_execute
          src_file: lua/lvm.c
          src_loc: lua/lvm.c:1484
          type: source
        - depth: 14
          func_name: ccall
          line: 557
          signature: ccall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:557
          type: source
        - depth: 15
          func_name: luaD_callnoyield
          line: 575
          signature: luaD_callnoyield
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:575
          type: source
        - depth: 16
          func_name: luaD_rawrunprotected
          line: 144
          signature: luaD_rawrunprotected
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:144
          type: source
        - depth: 17
          func_name: luaD_pcall
          line: 864
          signature: luaD_pcall
          src_file: lua/ldo.c
          src_loc: lua/ldo.c:864
          type: source
        - depth: 18
          func_name: lua_pcallk
          line: 1057
          signature: lua_pcallk
          src_file: lua/lapi.c
          src_loc: lua/lapi.c:1057
          type: source
        - depth: 19
          func_name: docall
          line: 127
          signature: docall
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:127
          type: source
        - depth: 20
          func_name: dochunk
          line: 135
          signature: dochunk
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:135
          type: source
        - depth: 21
          func_name: LLVMFuzzerTestOneInput
          line: 150
          signature: LLVMFuzzerTestOneInput
          src_file: lua/fuzz_lua.c
          src_loc: lua/fuzz_lua.c:150
          type: source
        - depth: 22
          func_name: fuzzer::Fuzzer::ExecuteCallback
          line: 614
          signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
            long)
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
          type: source
        - depth: 23
          func_name: fuzzer::RunOneTest
          line: 327
          signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
          type: source
        - depth: 24
          func_name: fuzzer::FuzzerDriver
          line: 862
          signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
            unsigned long))
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
          type: source
        - depth: 25
          func_name: main
          line: 20
          signature: main
          src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
          src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
          type: source
        - binary: ../lib/x86_64-linux-gnu/libc.so.6
          build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
          depth: 26
          func_name: __libc_start_main
          offset: 147586
          signature: __libc_start_main
          type: binary
        triggered_sanitizers:
        - id_1
      triggered_sanitizers:
      - id_1
    consistent_sanitizers: *id001
    cp_harness_binary_path: out/fuzz_lua
    cp_harness_name: fuzz_lua
    harness_info_id: 331651d90ca932dc0ff5c3902d2627d8
    inconsistent_sanitizers: *id002
    parser: asan
    triggered_sanitizers:
    - id_1
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDEwNzQyMTYxMDAKIElORk86IExvYWRlZCAxIG1vZHVsZXMgICAoNjE5NCBp
    bmxpbmUgOC1iaXQgY291bnRlcnMpOiA2MTk0IFsweDU1NTU1NTgzZTQ3MCwgMHg1NTU1NTU4M2Zj
    YTIpLCAKIElORk86IExvYWRlZCAxIFBDIHRhYmxlcyAoNjE5NCBQQ3MpOiA2MTk0IFsweDU1NTU1
    NTgzZmNhOCwweDU1NTU1NTg1N2ZjOCksIAogL291dC9mdXp6X2x1YTogUnVubmluZyAxIGlucHV0
    cyAxMDAgdGltZShzKSBlYWNoLgogUnVubmluZzogL3dvcmsvdG1wX2Jsb2IKID09PT09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiA9
    PTExPT1FUlJPUjogQWRkcmVzc1Nhbml0aXplcjogaGVhcC11c2UtYWZ0ZXItZnJlZSBvbiBhZGRy
    ZXNzIDB4NTE4MDAwMDAwNjM4IGF0IHBjIDB4NTU1NTU1NzI5YWFjIGJwIDB4N2ZmZmZmZmZkODkw
    IHNwIDB4N2ZmZmZmZmZkODg4CiBXUklURSBvZiBzaXplIDEgYXQgMHg1MTgwMDAwMDA2MzggdGhy
    ZWFkIFQwCiAgICAgIzAgMHg1NTU1NTU3MjlhYWIgaW4gbHVhX2Nsb3Nlc2xvdCAvc3JjL2x1YS9s
    YXBpLmM6MjEwOjMKICAgICAjMSAweDU1NTU1NTdhMzgwOCBpbiBsdWFMX3B1c2hyZXN1bHQgL3Ny
    Yy9sdWEvbGF1eGxpYi5jOjU4Njo1CiAgICAgIzIgMHg1NTU1NTU3YTM4MDggaW4gbHVhTF90cmFj
    ZWJhY2sgL3NyYy9sdWEvbGF1eGxpYi5jOjE2MzozCiAgICAgIzMgMHg1NTU1NTU3MjhkZGEgaW4g
    bXNnaGFuZGxlciAvc3JjL2x1YS9mdXp6X2x1YS5jOjExMTozCiAgICAgIzQgMHg1NTU1NTU3NDcx
    ZmMgaW4gbHVhRF9wcmVjYWxsIC9zcmMvbHVhL2xkby5jOjUxMjoxMQogICAgICM1IDB4NTU1NTU1
    NzQ3Yzk5IGluIGNjYWxsIC9zcmMvbHVhL2xkby5jOjU1NToxMwogICAgICM2IDB4NTU1NTU1NzQ3
    Yzk5IGluIGx1YURfY2FsbG5veWllbGQgL3NyYy9sdWEvbGRvLmM6NTc1OjMKICAgICAjNyAweDU1
    NTU1NTczZmY4YiBpbiBsdWFHX2Vycm9ybXNnIC9zcmMvbHVhL2xkZWJ1Zy5jOjc2NTo1CiAgICAg
    IzggMHg1NTU1NTU3M2VhYzggaW4gbHVhR19ydW5lcnJvciAvc3JjL2x1YS9sZGVidWcuYzo3ODE6
    MwogICAgICM5IDB4NTU1NTU1NzNhYWU4IGluIGx1YUdfdHlwZWVycm9yIC9zcmMvbHVhL2xkZWJ1
    Zy5jOjY4NzozCiAgICAgIzEwIDB4NTU1NTU1NzNmOGY2IGluIGx1YUdfb3BpbnRlcnJvciAvc3Jj
    L2x1YS9sZGVidWcuYzo3MjA6MwogICAgICMxMSAweDU1NTU1NTc4ODQ0YSBpbiBsdWFUX3RyeWJp
    blRNIC9zcmMvbHVhL2x0bS5jCiAgICAgIzEyIDB4NTU1NTU1Nzg4NDRhIGluIGx1YVRfdHJ5Ymlu
    YXNzb2NUTSAvc3JjL2x1YS9sdG0uYzoxNzk6NQogICAgICMxMyAweDU1NTU1NTc5NDI4MyBpbiBs
    dWFWX2V4ZWN1dGUgL3NyYy9sdWEvbHZtLmM6MTQ4NDo5CiAgICAgIzE0IDB4NTU1NTU1NzQ3Y2Ni
    IGluIGNjYWxsIC9zcmMvbHVhL2xkby5jOjU1Nzo1CiAgICAgIzE1IDB4NTU1NTU1NzQ3Y2NiIGlu
    IGx1YURfY2FsbG5veWllbGQgL3NyYy9sdWEvbGRvLmM6NTc1OjMKICAgICAjMTYgMHg1NTU1NTU3
    NDMwNTEgaW4gbHVhRF9yYXdydW5wcm90ZWN0ZWQgL3NyYy9sdWEvbGRvLmM6MTQ0OjMKICAgICAj
    MTcgMHg1NTU1NTU3NDkxN2QgaW4gbHVhRF9wY2FsbCAvc3JjL2x1YS9sZG8uYzo4NjQ6MTIKICAg
    ICAjMTggMHg1NTU1NTU3MzY3NjYgaW4gbHVhX3BjYWxsayAvc3JjL2x1YS9sYXBpLmM6MTA1Nzox
    NAogICAgICMxOSAweDU1NTU1NTcyOGJlMSBpbiBkb2NhbGwgL3NyYy9sdWEvZnV6el9sdWEuYzox
    Mjc6MTIKICAgICAjMjAgMHg1NTU1NTU3MjhiZTEgaW4gZG9jaHVuayAvc3JjL2x1YS9mdXp6X2x1
    YS5jOjEzNTozNAogICAgICMyMSAweDU1NTU1NTcyOGJlMSBpbiBMTFZNRnV6emVyVGVzdE9uZUlu
    cHV0IC9zcmMvbHVhL2Z1enpfbHVhLmM6MTUwOjUKICAgICAjMjIgMHg1NTU1NTU1ZGI0ZTAgaW4g
    ZnV6emVyOjpGdXp6ZXI6OkV4ZWN1dGVDYWxsYmFjayh1bnNpZ25lZCBjaGFyIGNvbnN0KiwgdW5z
    aWduZWQgbG9uZykgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2Z1enplci9GdXp6
    ZXJMb29wLmNwcDo2MTQ6MTMKICAgICAjMjMgMHg1NTU1NTU1YzVjNzQgaW4gZnV6emVyOjpSdW5P
    bmVUZXN0KGZ1enplcjo6RnV6emVyKiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcpIC9zcmMv
    bGx2bS1wcm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9mdXp6ZXIvRnV6emVyRHJpdmVyLmNwcDozMjc6
    NgogICAgICMyNCAweDU1NTU1NTVjYjcwYSBpbiBmdXp6ZXI6OkZ1enplckRyaXZlcihpbnQqLCBj
    aGFyKioqLCBpbnQgKCopKHVuc2lnbmVkIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSkgL3Ny
    Yy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2Z1enplci9GdXp6ZXJEcml2ZXIuY3BwOjg2
    Mjo5CiAgICAgIzI1IDB4NTU1NTU1NWY3YjAyIGluIG1haW4gL3NyYy9sbHZtLXByb2plY3QvY29t
    cGlsZXItcnQvbGliL2Z1enplci9GdXp6ZXJNYWluLmNwcDoyMDoxMAogICAgICMyNiAweDdmZmZm
    N2MzOTA4MiBpbiBfX2xpYmNfc3RhcnRfbWFpbiAoL2xpYi94ODZfNjQtbGludXgtZ251L2xpYmMu
    c28uNisweDI0MDgyKSAoQnVpbGRJZDogMDcwMjQzMGFlZjVmYTNkZGE0Mzk4NjU2M2U5ZmZjYzQ3
    ZWZiZDc1ZSkKICAgICAjMjcgMHg1NTU1NTU1YmM3NGQgaW4gX3N0YXJ0ICgvb3V0L2Z1enpfbHVh
    KzB4Njg3NGQpCiAKIDB4NTE4MDAwMDAwNjM4IGlzIGxvY2F0ZWQgNDQwIGJ5dGVzIGluc2lkZSBv
    ZiA4ODAtYnl0ZSByZWdpb24gWzB4NTE4MDAwMDAwNDgwLDB4NTE4MDAwMDAwN2YwKQogZnJlZWQg
    YnkgdGhyZWFkIFQwIGhlcmU6CiAgICAgIzAgMHg1NTU1NTU2ZTllYTUgaW4gcmVhbGxvYyAvc3Jj
    L2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvYXNhbi9hc2FuX21hbGxvY19saW51eC5jcHA6
    ODU6MwogICAgICMxIDB4NTU1NTU1NzVmM2EzIGluIGx1YU1fcmVhbGxvY18gL3NyYy9sdWEvbG1l
    bS5jOjE2NjoxNAogICAgICMyIDB4NTU1NTU1NzQzMjU4IGluIGx1YURfcmVhbGxvY3N0YWNrIC9z
    cmMvbHVhL2xkby5jOjE4NDoyMAogICAgICMzIDB4NTU1NTU1NzQ3MDg2IGluIGx1YURfZ3Jvd3N0
    YWNrIC9zcmMvbHVhL2xkby5jOjIyNDoxNAogICAgICM0IDB4NTU1NTU1NzQ3MDg2IGluIGx1YURf
    cHJlY2FsbCAvc3JjL2x1YS9sZG8uYzo1MDA6NwogICAgICM1IDB4NTU1NTU1NzQ3Yzk5IGluIGNj
    YWxsIC9zcmMvbHVhL2xkby5jOjU1NToxMwogICAgICM2IDB4NTU1NTU1NzQ3Yzk5IGluIGx1YURf
    Y2FsbG5veWllbGQgL3NyYy9sdWEvbGRvLmM6NTc1OjMKICAgICAjNyAweDU1NTU1NTc1MDc1NSBp
    biBsdWFGX2Nsb3NlIC9zcmMvbHVhL2xmdW5jLmM6MjExOjcKICAgICAjOCAweDU1NTU1NTcyOWE3
    YSBpbiBsdWFfY2xvc2VzbG90IC9zcmMvbHVhL2xhcGkuYzoyMDk6MwogICAgICM5IDB4NTU1NTU1
    N2EzODA4IGluIGx1YUxfcHVzaHJlc3VsdCAvc3JjL2x1YS9sYXV4bGliLmM6NTg2OjUKICAgICAj
    MTAgMHg1NTU1NTU3YTM4MDggaW4gbHVhTF90cmFjZWJhY2sgL3NyYy9sdWEvbGF1eGxpYi5jOjE2
    MzozCiAgICAgIzExIDB4NTU1NTU1NzI4ZGRhIGluIG1zZ2hhbmRsZXIgL3NyYy9sdWEvZnV6el9s
    dWEuYzoxMTE6MwogICAgICMxMiAweDU1NTU1NTc0NzFmYyBpbiBsdWFEX3ByZWNhbGwgL3NyYy9s
    dWEvbGRvLmM6NTEyOjExCiAgICAgIzEzIDB4NTU1NTU1NzQ3Yzk5IGluIGNjYWxsIC9zcmMvbHVh
    L2xkby5jOjU1NToxMwogICAgICMxNCAweDU1NTU1NTc0N2M5OSBpbiBsdWFEX2NhbGxub3lpZWxk
    IC9zcmMvbHVhL2xkby5jOjU3NTozCiAgICAgIzE1IDB4NTU1NTU1NzNmZjhiIGluIGx1YUdfZXJy
    b3Jtc2cgL3NyYy9sdWEvbGRlYnVnLmM6NzY1OjUKICAgICAjMTYgMHg1NTU1NTU3M2VhYzggaW4g
    bHVhR19ydW5lcnJvciAvc3JjL2x1YS9sZGVidWcuYzo3ODE6MwogICAgICMxNyAweDU1NTU1NTcz
    YWFlOCBpbiBsdWFHX3R5cGVlcnJvciAvc3JjL2x1YS9sZGVidWcuYzo2ODc6MwogICAgICMxOCAw
    eDU1NTU1NTczZjhmNiBpbiBsdWFHX29waW50ZXJyb3IgL3NyYy9sdWEvbGRlYnVnLmM6NzIwOjMK
    ICAgICAjMTkgMHg1NTU1NTU3ODg0NGEgaW4gbHVhVF90cnliaW5UTSAvc3JjL2x1YS9sdG0uYwog
    ICAgICMyMCAweDU1NTU1NTc4ODQ0YSBpbiBsdWFUX3RyeWJpbmFzc29jVE0gL3NyYy9sdWEvbHRt
    LmM6MTc5OjUKICAgICAjMjEgMHg1NTU1NTU3OTQyODMgaW4gbHVhVl9leGVjdXRlIC9zcmMvbHVh
    L2x2bS5jOjE0ODQ6OQogICAgICMyMiAweDU1NTU1NTc0N2NjYiBpbiBjY2FsbCAvc3JjL2x1YS9s
    ZG8uYzo1NTc6NQogICAgICMyMyAweDU1NTU1NTc0N2NjYiBpbiBsdWFEX2NhbGxub3lpZWxkIC9z
    cmMvbHVhL2xkby5jOjU3NTozCiAgICAgIzI0IDB4NTU1NTU1NzQzMDUxIGluIGx1YURfcmF3cnVu
    cHJvdGVjdGVkIC9zcmMvbHVhL2xkby5jOjE0NDozCiAgICAgIzI1IDB4NTU1NTU1NzQ5MTdkIGlu
    IGx1YURfcGNhbGwgL3NyYy9sdWEvbGRvLmM6ODY0OjEyCiAgICAgIzI2IDB4NTU1NTU1NzM2NzY2
    IGluIGx1YV9wY2FsbGsgL3NyYy9sdWEvbGFwaS5jOjEwNTc6MTQKICAgICAjMjcgMHg1NTU1NTU3
    MjhiZTEgaW4gZG9jYWxsIC9zcmMvbHVhL2Z1enpfbHVhLmM6MTI3OjEyCiAgICAgIzI4IDB4NTU1
    NTU1NzI4YmUxIGluIGRvY2h1bmsgL3NyYy9sdWEvZnV6el9sdWEuYzoxMzU6MzQKICAgICAjMjkg
    MHg1NTU1NTU3MjhiZTEgaW4gTExWTUZ1enplclRlc3RPbmVJbnB1dCAvc3JjL2x1YS9mdXp6X2x1
    YS5jOjE1MDo1CiAgICAgIzMwIDB4NTU1NTU1NWRiNGUwIGluIGZ1enplcjo6RnV6emVyOjpFeGVj
    dXRlQ2FsbGJhY2sodW5zaWduZWQgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcpIC9zcmMvbGx2
    bS1wcm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9mdXp6ZXIvRnV6emVyTG9vcC5jcHA6NjE0OjEzCiAg
    ICAgIzMxIDB4NTU1NTU1NWM1Yzc0IGluIGZ1enplcjo6UnVuT25lVGVzdChmdXp6ZXI6OkZ1enpl
    ciosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxl
    ci1ydC9saWIvZnV6emVyL0Z1enplckRyaXZlci5jcHA6MzI3OjYKICAgICAjMzIgMHg1NTU1NTU1
    Y2I3MGEgaW4gZnV6emVyOjpGdXp6ZXJEcml2ZXIoaW50KiwgY2hhcioqKiwgaW50ICgqKSh1bnNp
    Z25lZCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykpIC9zcmMvbGx2bS1wcm9qZWN0L2NvbXBp
    bGVyLXJ0L2xpYi9mdXp6ZXIvRnV6emVyRHJpdmVyLmNwcDo4NjI6OQogICAgICMzMyAweDU1NTU1
    NTVmN2IwMiBpbiBtYWluIC9zcmMvbGx2bS1wcm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9mdXp6ZXIv
    RnV6emVyTWFpbi5jcHA6MjA6MTAKICAgICAjMzQgMHg3ZmZmZjdjMzkwODIgaW4gX19saWJjX3N0
    YXJ0X21haW4gKC9saWIveDg2XzY0LWxpbnV4LWdudS9saWJjLnNvLjYrMHgyNDA4MikgKEJ1aWxk
    SWQ6IDA3MDI0MzBhZWY1ZmEzZGRhNDM5ODY1NjNlOWZmY2M0N2VmYmQ3NWUpCiAKIHByZXZpb3Vz
    bHkgYWxsb2NhdGVkIGJ5IHRocmVhZCBUMCBoZXJlOgogICAgICMwIDB4NTU1NTU1NmU5ZWE1IGlu
    IHJlYWxsb2MgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl9tYWxs
    b2NfbGludXguY3BwOjg1OjMKICAgICAjMSAweDU1NTU1NTc1ZjNhMyBpbiBsdWFNX3JlYWxsb2Nf
    IC9zcmMvbHVhL2xtZW0uYzoxNjY6MTQKICAgICAjMiAweDU1NTU1NTc0MzI1OCBpbiBsdWFEX3Jl
    YWxsb2NzdGFjayAvc3JjL2x1YS9sZG8uYzoxODQ6MjAKICAgICAjMyAweDU1NTU1NTc0M2M1YiBp
    biBsdWFEX3Nocmlua3N0YWNrIC9zcmMvbHVhL2xkby5jOjI3Mjo1CiAgICAgIzQgMHg1NTU1NTU3
    NWMyYzcgaW4gdHJhdmVyc2V0aHJlYWQgL3NyYy9sdWEvbGdjLmM6NjQ0OjUKICAgICAjNSAweDU1
    NTU1NTc1YzJjNyBpbiBwcm9wYWdhdGVtYXJrIC9zcmMvbHVhL2xnYy5jOjY2MjozMAogICAgICM2
    IDB4NTU1NTU1NzU1MDg4IGluIGluY3N0ZXAgL3NyYy9sdWEvbGdjLmM6MTY1MjoxOQogICAgICM3
    IDB4NTU1NTU1NzU1MDg4IGluIGx1YUNfc3RlcCAvc3JjL2x1YS9sZ2MuYzoxNjczOjcKICAgICAj
    OCAweDU1NTU1NTczZTM4YyBpbiBsdWFHX3J1bmVycm9yIC9zcmMvbHVhL2xkZWJ1Zy5jOjc3NToz
    CiAgICAgIzkgMHg1NTU1NTU3M2FhZTggaW4gbHVhR190eXBlZXJyb3IgL3NyYy9sdWEvbGRlYnVn
    LmM6Njg3OjMKICAgICAjMTAgMHg1NTU1NTU3M2Y4ZjYgaW4gbHVhR19vcGludGVycm9yIC9zcmMv
    bHVhL2xkZWJ1Zy5jOjcyMDozCiAgICAgIzExIDB4NTU1NTU1Nzg4NDRhIGluIGx1YVRfdHJ5Ymlu
    VE0gL3NyYy9sdWEvbHRtLmMKICAgICAjMTIgMHg1NTU1NTU3ODg0NGEgaW4gbHVhVF90cnliaW5h
    c3NvY1RNIC9zcmMvbHVhL2x0bS5jOjE3OTo1CiAgICAgIzEzIDB4NTU1NTU1Nzk0MjgzIGluIGx1
    YVZfZXhlY3V0ZSAvc3JjL2x1YS9sdm0uYzoxNDg0OjkKICAgICAjMTQgMHg1NTU1NTU3NDdjY2Ig
    aW4gY2NhbGwgL3NyYy9sdWEvbGRvLmM6NTU3OjUKICAgICAjMTUgMHg1NTU1NTU3NDdjY2IgaW4g
    bHVhRF9jYWxsbm95aWVsZCAvc3JjL2x1YS9sZG8uYzo1NzU6MwogICAgICMxNiAweDU1NTU1NTc0
    MzA1MSBpbiBsdWFEX3Jhd3J1bnByb3RlY3RlZCAvc3JjL2x1YS9sZG8uYzoxNDQ6MwogICAgICMx
    NyAweDU1NTU1NTc0OTE3ZCBpbiBsdWFEX3BjYWxsIC9zcmMvbHVhL2xkby5jOjg2NDoxMgogICAg
    ICMxOCAweDU1NTU1NTczNjc2NiBpbiBsdWFfcGNhbGxrIC9zcmMvbHVhL2xhcGkuYzoxMDU3OjE0
    CiAgICAgIzE5IDB4NTU1NTU1NzI4YmUxIGluIGRvY2FsbCAvc3JjL2x1YS9mdXp6X2x1YS5jOjEy
    NzoxMgogICAgICMyMCAweDU1NTU1NTcyOGJlMSBpbiBkb2NodW5rIC9zcmMvbHVhL2Z1enpfbHVh
    LmM6MTM1OjM0CiAgICAgIzIxIDB4NTU1NTU1NzI4YmUxIGluIExMVk1GdXp6ZXJUZXN0T25lSW5w
    dXQgL3NyYy9sdWEvZnV6el9sdWEuYzoxNTA6NQogICAgICMyMiAweDU1NTU1NTVkYjRlMCBpbiBm
    dXp6ZXI6OkZ1enplcjo6RXhlY3V0ZUNhbGxiYWNrKHVuc2lnbmVkIGNoYXIgY29uc3QqLCB1bnNp
    Z25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enpl
    ckxvb3AuY3BwOjYxNDoxMwogICAgICMyMyAweDU1NTU1NTVjNWM3NCBpbiBmdXp6ZXI6OlJ1bk9u
    ZVRlc3QoZnV6emVyOjpGdXp6ZXIqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykgL3NyYy9s
    bHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2Z1enplci9GdXp6ZXJEcml2ZXIuY3BwOjMyNzo2
    CiAgICAgIzI0IDB4NTU1NTU1NWNiNzBhIGluIGZ1enplcjo6RnV6emVyRHJpdmVyKGludCosIGNo
    YXIqKiosIGludCAoKikodW5zaWduZWQgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcpKSAvc3Jj
    L2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplckRyaXZlci5jcHA6ODYy
    OjkKICAgICAjMjUgMHg1NTU1NTU1ZjdiMDIgaW4gbWFpbiAvc3JjL2xsdm0tcHJvamVjdC9jb21w
    aWxlci1ydC9saWIvZnV6emVyL0Z1enplck1haW4uY3BwOjIwOjEwCiAgICAgIzI2IDB4N2ZmZmY3
    YzM5MDgyIGluIF9fbGliY19zdGFydF9tYWluICgvbGliL3g4Nl82NC1saW51eC1nbnUvbGliYy5z
    by42KzB4MjQwODIpIChCdWlsZElkOiAwNzAyNDMwYWVmNWZhM2RkYTQzOTg2NTYzZTlmZmNjNDdl
    ZmJkNzVlKQogCiBTVU1NQVJZOiBBZGRyZXNzU2FuaXRpemVyOiBoZWFwLXVzZS1hZnRlci1mcmVl
    IC9zcmMvbHVhL2xhcGkuYzoyMTA6MyBpbiBsdWFfY2xvc2VzbG90CiBTaGFkb3cgYnl0ZXMgYXJv
    dW5kIHRoZSBidWdneSBhZGRyZXNzOgogICAweDUxODAwMDAwMDM4MDogMDAgMDAgMDAgMDAgZmEg
    ZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEKICAgMHg1MTgwMDAwMDA0MDA6IGZhIGZh
    IGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhCiAgIDB4NTE4MDAwMDAw
    NDgwOiBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZAogICAw
    eDUxODAwMDAwMDUwMDogZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQg
    ZmQgZmQKICAgMHg1MTgwMDAwMDA1ODA6IGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZk
    IGZkIGZkIGZkIGZkIGZkCiA9PjB4NTE4MDAwMDAwNjAwOiBmZCBmZCBmZCBmZCBmZCBmZCBmZFtm
    ZF1mZCBmZCBmZCBmZCBmZCBmZCBmZCBmZAogICAweDUxODAwMDAwMDY4MDogZmQgZmQgZmQgZmQg
    ZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQgZmQKICAgMHg1MTgwMDAwMDA3MDA6IGZk
    IGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkIGZkCiAgIDB4NTE4MDAw
    MDAwNzgwOiBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmZCBmYSBmYQog
    ICAweDUxODAwMDAwMDgwMDogZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEgZmEg
    ZmEgZmEgZmEKICAgMHg1MTgwMDAwMDA4ODA6IGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZhIGZh
    IGZhIGZhIGZhIGZhIGZhIGZhCiBTaGFkb3cgYnl0ZSBsZWdlbmQgKG9uZSBzaGFkb3cgYnl0ZSBy
    ZXByZXNlbnRzIDggYXBwbGljYXRpb24gYnl0ZXMpOgogICBBZGRyZXNzYWJsZTogICAgICAgICAg
    IDAwCiAgIFBhcnRpYWxseSBhZGRyZXNzYWJsZTogMDEgMDIgMDMgMDQgMDUgMDYgMDcgCiAgIEhl
    YXAgbGVmdCByZWR6b25lOiAgICAgICBmYQogICBGcmVlZCBoZWFwIHJlZ2lvbjogICAgICAgZmQK
    ICAgU3RhY2sgbGVmdCByZWR6b25lOiAgICAgIGYxCiAgIFN0YWNrIG1pZCByZWR6b25lOiAgICAg
    ICBmMgogICBTdGFjayByaWdodCByZWR6b25lOiAgICAgZjMKICAgU3RhY2sgYWZ0ZXIgcmV0dXJu
    OiAgICAgIGY1CiAgIFN0YWNrIHVzZSBhZnRlciBzY29wZTogICBmOAogICBHbG9iYWwgcmVkem9u
    ZTogICAgICAgICAgZjkKICAgR2xvYmFsIGluaXQgb3JkZXI6ICAgICAgIGY2CiAgIFBvaXNvbmVk
    IGJ5IHVzZXI6ICAgICAgICBmNwogICBDb250YWluZXIgb3ZlcmZsb3c6ICAgICAgZmMKICAgQXJy
    YXkgY29va2llOiAgICAgICAgICAgIGFjCiAgIEludHJhIG9iamVjdCByZWR6b25lOiAgICBiYgog
    ICBBU2FuIGludGVybmFsOiAgICAgICAgICAgZmUKICAgTGVmdCBhbGxvY2EgcmVkem9uZTogICAg
    IGNhCiAgIFJpZ2h0IGFsbG9jYSByZWR6b25lOiAgICBjYgogPT0xMT09QUJPUlRJTkcK
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720745362.020148
  time_start: 1720745361.324756
  time_taken: 0.6953921318054199
sanitizer_history:
- - id_1
- - id_1
- - id_1
- - id_1
- - id_1
- - id_1
- - id_1
- - id_1
- - id_1
- - id_1
target_id: 1
