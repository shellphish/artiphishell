/**
 * @id java/java_harness_to_changedfunc
 * @kind problem
 * @name List all the functions that's in between the harness function and the target function
 * @severity information
 */

 import java

 query predicate edges(Callable pred, Callable succ) {
 pred.polyCalls(succ)
 and succ.getName() != ""
 }
 
 predicate is_target_function(Callable c) {
 {% for i, name in enumerate(target_functions) %}
     {% if i > 0 %}or {% endif %}c.getQualifiedName().matches("%.{{ name }}")
 {% endfor %}
 }
 
 {% if harness_files %}
 predicate is_harness_function(Callable c) {
 {% for i, path in enumerate(harness_files) %}
     {% if i > 0 %}or {% endif %}c.getFile().getRelativePath() = "{{ path }}"
 {% endfor %}
 }
 {% endif %}
 
 from Callable src, Callable dest, Callable inbetween, StringLiteral s
 where
 edges+(src, inbetween)
 and edges+(inbetween, dest)
 and is_target_function(dest)
 {% if harness_files %}
 and is_harness_function(src)
 {% endif %}
 and 
 (
    s.getEnclosingCallable() = inbetween
    or 
    s.getEnclosingCallable() = src
    or
    s.getEnclosingCallable() = dest
 )
 select s.getValue()
 
 