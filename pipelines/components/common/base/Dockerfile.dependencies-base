# aixcc-build: aixcc-dependencies-base
FROM docker.io/library/ubuntu:22.04@sha256:340d9b015b194dc6e2a13938944e0d016e57b9679963fdeb9ce021daac430221

RUN apt-get update && apt-get install -y clang-14 python-is-python3 python3-pip rsync wget curl git jq
RUN apt-get update && apt-get install -y busybox-static python3 wget bc binutils bison build-essential
RUN apt-get update && apt-get install -y dwarves flex gcc git gnupg2 gzip libelf-dev libncurses5-dev
RUN apt-get update && apt-get install -y libssl-dev make openssl pahole perl-base rsync tar xz-utils
RUN apt-get update && apt-get install -y tmux vim nano procps iputils-ping net-tools iproute2
RUN apt-get update && apt-get install -y ca-certificates curl wget python3 python3-dev python3-pip python3-venv vim git rsync && \
	install -m 0755 -d /etc/apt/keyrings && \
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc && \
	chmod a+r /etc/apt/keyrings/docker.asc && \
	echo \
	  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
	  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" >/etc/apt/sources.list.d/docker.list && \
	apt-get update && apt-get install -y docker-ce-cli docker-buildx-plugin docker-compose-plugin

RUN pip install requests ipython ipdb jinja2

RUN mkdir -p /shellphish

WORKDIR /shellphish

######################### SYZKALLER #######################
RUN apt-get update && apt-get install -y \
    wget \
    git \
    make \
    gcc \
    flex \
    bison \
    libncurses-dev \
    libelf-dev \
    libssl-dev \
    build-essential \
    g++ \
    qemu-system-x86 \
    zip \
    unzip \
    debootstrap \
    bc \
    rsync \
    python3-pip \
    python3

RUN apt-get update && apt-get install -y curl

RUN pip install watchdog

# Download and extract Go
RUN wget https://dl.google.com/go/go1.21.4.linux-amd64.tar.gz \
    && tar -xf go1.21.4.linux-amd64.tar.gz \
    && rm go1.21.4.linux-amd64.tar.gz

# install virtme for kernel testing
RUN echo deb http://ppa.launchpad.net/arighi/virtme-ng/ubuntu jammy main >>/etc/apt/sources.list && \
    echo deb-src http://ppa.launchpad.net/arighi/virtme-ng/ubuntu jammy main >>/etc/apt/sources.list && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 882A7727752A6461FCDDCFE5DCFA0E1546589D85 && \
    apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y virtme-ng libvirt-daemon-system

# Set environment variables
#RUN curl https://dl.google.com/go/go1.21.4.linux-amd64.tar.gz | tar -C /usr/local -xz
#ENV PATH /usr/local/go/bin:/gopath/bin:$PATH
#ENV GOPATH /gopath
ENV GOROOT /shellphish/go
ENV PATH $GOROOT/bin:$PATH
####### SYZKALLER BUILD ########
RUN apt-get update && apt-get install -y make gcc flex bison libncurses-dev libelf-dev libssl-dev wget clang-format clang llvm python3
#################### END SYZKALLER #############################

RUN apt install -y python3-pip
RUN pip3 install -U pip


RUN cd /tmp && wget https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64.tar.gz -O - | tar xz && cp yq_linux_amd64 /usr/bin/yq && mv yq_linux_amd64 /usr/local/bin/yq

RUN apt-get update && apt-get install -y openjdk-17-jdk
RUN apt -y update && apt -y install inotify-tools
RUN apt update -y && apt install -y python3 python3-pip git bash rsync curl wget build-essential

###### LLVM Builds For 22.04 and 20.04 ######
RUN mkdir -p /llvm && chmod 777 /llvm
RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-17.0.6/clang+llvm-17.0.6-x86_64-linux-gnu-ubuntu-22.04.tar.xz \
        -O /llvm/clang-17-22.04.tar.gz 2>/dev/null
RUN wget https://github.com/amyb-asu/llvm-build/releases/download/llvm-16-20.04/clang-16-20.04.tar.gz \
        -O /llvm/clang-16-20.04.tar.gz 2>/dev/null

####################### NO BOYS ALLOWED ########################
RUN mv /usr/bin/docker /usr/bin/.docker.wrapped
COPY docker /usr/bin/docker
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x kubectl && mv kubectl /usr/bin/kubectl

RUN apt-get update && apt-get install patchelf htop procps strace ltrace

COPY ./wrap-lib/ /shellphish/wrap-lib/
COPY ./libfreedom/ /shellphish/libfreedom/
WORKDIR /shellphish
