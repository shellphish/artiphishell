cp_harness_binary_path: out/filein_harness
cp_harness_id: id_1
cp_harness_name: filein_harness
cp_harness_source_path: src/test/filein_harness.c
crash_report_id: 7c4699dcd770c3b420ac25ca40ee6afedcfee62d321288344cd475fff8429892
fuzzer: aflplusplus
harness_info_id: 6266084036248297570
original_crash_id: c92193877b35534b0fe56966d11dd689a6c3bc5ffc8f183d15a69fc0990990d3
run_pov_result:
  cid: 2dee9f857f2013db940d03a51f200ac16d43b87f13f2a8aa79cfbe2373b3acd4
  exitcode: 0
  pov:
    reports:
    - error_line: 'ERROR: AddressSanitizer: global-buffer-overflow on address 0x<REDACTED>
        at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
      report: "\n READ of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
        \ in strcspn /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\n\
        \     #1 0x<REDACTED> in func_a (/out/filein_harness+0x1a6aea)\n     #2 0x<REDACTED>\
        \ in LLVMFuzzerTestOneInput (/out/filein_harness+0x1a7771)\n     #3 0x<REDACTED>\
        \ in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)\
        \ /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n     #4\
        \ 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned\
        \ long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
        \     #5 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
        \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
        \     #6 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
        \     #7 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
        \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #8 0x<REDACTED>\
        \ in _start (/out/filein_harness+0x3c6fd)\n \n 0x<REDACTED> is located <REDACTED>\
        \ bytes before global variable 'pipefd' defined in 'filein_harness.c' (0x<REDACTED>)\
        \ of size <REDACTED>\n 0x<REDACTED> is located <REDACTED> bytes after global\
        \ variable 'items' defined in 'filein_harness.c' (0x<REDACTED>) of size <REDACTED>\n\
        \ SUMMARY: AddressSanitizer: global-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\
        \ in strcspn\n Shadow bytes around the buggy address:\n   0x<REDACTED>: 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00\n =>0x<REDACTED>: 00 00 00 00 00 00 00[06]f9 f9 f9\
        \ f9 00 f9 f9 f9\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n \
        \  0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>:\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n Shadow byte legend (one\
        \ shadow byte represents 8 application bytes):\n   Addressable:          \
        \ 00\n   Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:\
        \       fa\n   Freed heap region:       fd\n   Stack left redzone:      f1\n\
        \   Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack\
        \ after return:      f5\n   Stack use after scope:   f8\n   Global redzone:\
        \          f9\n   Global init order:       f6\n   Poisoned by user:      \
        \  f7\n   Container overflow:      fc\n   Array cookie:            ac\n  \
        \ Intra object redzone:    bb\n   ASan internal:           fe\n   Left alloca\
        \ redzone:     ca\n   Right alloca redzone:    cb\n <MARKER>ABORTING"
      stacktraces:
      - depth: 0
        func_name: strcspn
        line: 767
        signature: strcspn
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:767
        type: source
      - binary: ../(/out/filein_harness+0x1a6aea)
        depth: 1
        func_name: func_a
        signature: func_a
        type: maybe_asan_interceptor
      - binary: ../(/out/filein_harness+0x1a7771)
        depth: 2
        func_name: LLVMFuzzerTestOneInput
        signature: LLVMFuzzerTestOneInput
        type: maybe_asan_interceptor
      - depth: 3
        func_name: fuzzer::Fuzzer::ExecuteCallback
        line: 614
        signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
          long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
        type: source
      - depth: 4
        func_name: fuzzer::RunOneTest
        line: 327
        signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
        type: source
      - depth: 5
        func_name: fuzzer::FuzzerDriver
        line: 862
        signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
          unsigned long))
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
        type: source
      - depth: 6
        func_name: main
        line: 20
        signature: main
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
        type: source
      - binary: ../lib/x86_64-linux-gnu/libc.so.6
        build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
        depth: 7
        func_name: __libc_start_main
        offset: 147586
        signature: __libc_start_main
        type: binary
      - binary: ../(/out/filein_harness+0x3c6fd)
        depth: 8
        func_name: _start
        signature: _start
        type: maybe_asan_interceptor
      triggered_sanitizers:
      - id_1
    triggered_sanitizers: !!set
      id_1: null
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDEwMTg0NTA4NwogSU5GTzogTG9hZGVkIDEgbW9kdWxlcyAgICg2OSBpbmxp
    bmUgOC1iaXQgY291bnRlcnMpOiA2OSBbMHg1NTU1NTU3NWUyYzAsIDB4NTU1NTU1NzVlMzA1KSwg
    CiBJTkZPOiBMb2FkZWQgMSBQQyB0YWJsZXMgKDY5IFBDcyk6IDY5IFsweDU1NTU1NTc1ZTMwOCww
    eDU1NTU1NTc1ZTc1OCksIAogL291dC9maWxlaW5faGFybmVzczogUnVubmluZyAxIGlucHV0cyAx
    IHRpbWUocykgZWFjaC4KIFJ1bm5pbmc6IC93b3JrL3RtcF9ibG9iCiA9PT09PT09PT09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogPT0xND09
    RVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6IGdsb2JhbC1idWZmZXItb3ZlcmZsb3cgb24gYWRkcmVz
    cyAweDU1NTU1NjBlNzliZSBhdCBwYyAweDU1NTU1NTYzZDA4NiBicCAweDdmZmZmZmZmZTI2MCBz
    cCAweDdmZmZmZmZmZGEyMAogUkVBRCBvZiBzaXplIDI1IGF0IDB4NTU1NTU2MGU3OWJlIHRocmVh
    ZCBUMAogICAgICMwIDB4NTU1NTU1NjNkMDg1IGluIHN0cmNzcG4gL3NyYy9sbHZtLXByb2plY3Qv
    Y29tcGlsZXItcnQvbGliL2FzYW4vLi4vc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfY29tbW9u
    X2ludGVyY2VwdG9ycy5pbmM6NzY3OjUKICAgICAjMSAweDU1NTU1NTZmYWFlYSBpbiBmdW5jX2Eg
    KC9vdXQvZmlsZWluX2hhcm5lc3MrMHgxYTZhZWEpCiAgICAgIzIgMHg1NTU1NTU2ZmI3NzEgaW4g
    TExWTUZ1enplclRlc3RPbmVJbnB1dCAoL291dC9maWxlaW5faGFybmVzcysweDFhNzc3MSkKICAg
    ICAjMyAweDU1NTU1NTVhZjQ5MCBpbiBmdXp6ZXI6OkZ1enplcjo6RXhlY3V0ZUNhbGxiYWNrKHVu
    c2lnbmVkIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21w
    aWxlci1ydC9saWIvZnV6emVyL0Z1enplckxvb3AuY3BwOjYxNDoxMwogICAgICM0IDB4NTU1NTU1
    NTk5YzI0IGluIGZ1enplcjo6UnVuT25lVGVzdChmdXp6ZXI6OkZ1enplciosIGNoYXIgY29uc3Qq
    LCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVy
    L0Z1enplckRyaXZlci5jcHA6MzI3OjYKICAgICAjNSAweDU1NTU1NTU5ZjZiYSBpbiBmdXp6ZXI6
    OkZ1enplckRyaXZlcihpbnQqLCBjaGFyKioqLCBpbnQgKCopKHVuc2lnbmVkIGNoYXIgY29uc3Qq
    LCB1bnNpZ25lZCBsb25nKSkgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGliL2Z1enpl
    ci9GdXp6ZXJEcml2ZXIuY3BwOjg2Mjo5CiAgICAgIzYgMHg1NTU1NTU1Y2JhYjIgaW4gbWFpbiAv
    c3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplck1haW4uY3BwOjIw
    OjEwCiAgICAgIzcgMHg3ZmZmZjdhNTkwODIgaW4gX19saWJjX3N0YXJ0X21haW4gKC9saWIveDg2
    XzY0LWxpbnV4LWdudS9saWJjLnNvLjYrMHgyNDA4MikgKEJ1aWxkSWQ6IDA3MDI0MzBhZWY1ZmEz
    ZGRhNDM5ODY1NjNlOWZmY2M0N2VmYmQ3NWUpCiAgICAgIzggMHg1NTU1NTU1OTA2ZmQgaW4gX3N0
    YXJ0ICgvb3V0L2ZpbGVpbl9oYXJuZXNzKzB4M2M2ZmQpCiAKIDB4NTU1NTU2MGU3OWJlIGlzIGxv
    Y2F0ZWQgMzQgYnl0ZXMgYmVmb3JlIGdsb2JhbCB2YXJpYWJsZSAncGlwZWZkJyBkZWZpbmVkIGlu
    ICdmaWxlaW5faGFybmVzcy5jJyAoMHg1NTU1NTYwZTc5ZTApIG9mIHNpemUgOAogMHg1NTU1NTYw
    ZTc5YmUgaXMgbG9jYXRlZCAwIGJ5dGVzIGFmdGVyIGdsb2JhbCB2YXJpYWJsZSAnaXRlbXMnIGRl
    ZmluZWQgaW4gJ2ZpbGVpbl9oYXJuZXNzLmMnICgweDU1NTU1NjBlNzlhMCkgb2Ygc2l6ZSAzMAog
    U1VNTUFSWTogQWRkcmVzc1Nhbml0aXplcjogZ2xvYmFsLWJ1ZmZlci1vdmVyZmxvdyAvc3JjL2xs
    dm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvYXNhbi8uLi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0
    aXplcl9jb21tb25faW50ZXJjZXB0b3JzLmluYzo3Njc6NSBpbiBzdHJjc3BuCiBTaGFkb3cgYnl0
    ZXMgYXJvdW5kIHRoZSBidWdneSBhZGRyZXNzOgogICAweDU1NTU1NjBlNzcwMDogMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTc3ODA6
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4NTU1
    NTU2MGU3ODAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MAogICAweDU1NTU1NjBlNzg4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTc5MDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwCiA9PjB4NTU1NTU2MGU3OTgwOiAwMCAwMCAwMCAwMCAwMCAw
    MCAwMFswNl1mOSBmOSBmOSBmOSAwMCBmOSBmOSBmOQogICAweDU1NTU1NjBlN2EwMDogMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTdh
    ODA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAgIDB4
    NTU1NTU2MGU3YjAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMAogICAweDU1NTU1NjBlN2I4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTdjMDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiBTaGFkb3cgYnl0ZSBsZWdlbmQgKG9uZSBzaGFkb3cg
    Ynl0ZSByZXByZXNlbnRzIDggYXBwbGljYXRpb24gYnl0ZXMpOgogICBBZGRyZXNzYWJsZTogICAg
    ICAgICAgIDAwCiAgIFBhcnRpYWxseSBhZGRyZXNzYWJsZTogMDEgMDIgMDMgMDQgMDUgMDYgMDcg
    CiAgIEhlYXAgbGVmdCByZWR6b25lOiAgICAgICBmYQogICBGcmVlZCBoZWFwIHJlZ2lvbjogICAg
    ICAgZmQKICAgU3RhY2sgbGVmdCByZWR6b25lOiAgICAgIGYxCiAgIFN0YWNrIG1pZCByZWR6b25l
    OiAgICAgICBmMgogICBTdGFjayByaWdodCByZWR6b25lOiAgICAgZjMKICAgU3RhY2sgYWZ0ZXIg
    cmV0dXJuOiAgICAgIGY1CiAgIFN0YWNrIHVzZSBhZnRlciBzY29wZTogICBmOAogICBHbG9iYWwg
    cmVkem9uZTogICAgICAgICAgZjkKICAgR2xvYmFsIGluaXQgb3JkZXI6ICAgICAgIGY2CiAgIFBv
    aXNvbmVkIGJ5IHVzZXI6ICAgICAgICBmNwogICBDb250YWluZXIgb3ZlcmZsb3c6ICAgICAgZmMK
    ICAgQXJyYXkgY29va2llOiAgICAgICAgICAgIGFjCiAgIEludHJhIG9iamVjdCByZWR6b25lOiAg
    ICBiYgogICBBU2FuIGludGVybmFsOiAgICAgICAgICAgZmUKICAgTGVmdCBhbGxvY2EgcmVkem9u
    ZTogICAgIGNhCiAgIFJpZ2h0IGFsbG9jYSByZWR6b25lOiAgICBjYgogPT0xND09QUJPUlRJTkcK
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720061491.0010643
  time_start: 1720061487.1807191
  time_taken: 3.820345163345337
target_id: 1
