cp_harness_binary_path: out/filein_harness
cp_harness_id: id_1
cp_harness_name: filein_harness
cp_harness_source_path: src/test/filein_harness.c
crash_report_id: 7c4699dcd770c3b420ac25ca40ee6afedcfee62d321288344cd475fff8429892
fuzzer: aflplusplus
harness_info_id: 6266084036248297570
original_crash_id: e71f2bcb1ded84541cbb34dbe463e39eaa2a6b980a72384f9e42086d8483d7d4
run_pov_result:
  cid: 28973b30e5529411a272cbb906c10988d555abf33226507dccab88c20eb0e3f8
  exitcode: 0
  pov:
    reports:
    - error_line: 'ERROR: AddressSanitizer: global-buffer-overflow on address 0x<REDACTED>
        at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
      report: "\n READ of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
        \ in strcspn /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\n\
        \     #1 0x<REDACTED> in func_a (/out/filein_harness+0x1a6aea)\n     #2 0x<REDACTED>\
        \ in LLVMFuzzerTestOneInput (/out/filein_harness+0x1a7771)\n     #3 0x<REDACTED>\
        \ in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)\
        \ /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n     #4\
        \ 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned\
        \ long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
        \     #5 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
        \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
        \     #6 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
        \     #7 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
        \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #8 0x<REDACTED>\
        \ in _start (/out/filein_harness+0x3c6fd)\n \n 0x<REDACTED> is located <REDACTED>\
        \ bytes before global variable 'pipefd' defined in 'filein_harness.c' (0x<REDACTED>)\
        \ of size <REDACTED>\n 0x<REDACTED> is located <REDACTED> bytes after global\
        \ variable 'items' defined in 'filein_harness.c' (0x<REDACTED>) of size <REDACTED>\n\
        \ SUMMARY: AddressSanitizer: global-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\
        \ in strcspn\n Shadow bytes around the buggy address:\n   0x<REDACTED>: 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00\n =>0x<REDACTED>: 00 00 00 00 00 00 00[06]f9 f9 f9\
        \ f9 00 f9 f9 f9\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n \
        \  0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>:\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n Shadow byte legend (one\
        \ shadow byte represents 8 application bytes):\n   Addressable:          \
        \ 00\n   Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:\
        \       fa\n   Freed heap region:       fd\n   Stack left redzone:      f1\n\
        \   Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack\
        \ after return:      f5\n   Stack use after scope:   f8\n   Global redzone:\
        \          f9\n   Global init order:       f6\n   Poisoned by user:      \
        \  f7\n   Container overflow:      fc\n   Array cookie:            ac\n  \
        \ Intra object redzone:    bb\n   ASan internal:           fe\n   Left alloca\
        \ redzone:     ca\n   Right alloca redzone:    cb\n <MARKER>ABORTING"
      stacktraces:
      - depth: 0
        func_name: strcspn
        line: 767
        signature: strcspn
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:767
        type: source
      - binary: ../(/out/filein_harness+0x1a6aea)
        depth: 1
        func_name: func_a
        signature: func_a
        type: maybe_asan_interceptor
      - binary: ../(/out/filein_harness+0x1a7771)
        depth: 2
        func_name: LLVMFuzzerTestOneInput
        signature: LLVMFuzzerTestOneInput
        type: maybe_asan_interceptor
      - depth: 3
        func_name: fuzzer::Fuzzer::ExecuteCallback
        line: 614
        signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
          long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
        type: source
      - depth: 4
        func_name: fuzzer::RunOneTest
        line: 327
        signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
        type: source
      - depth: 5
        func_name: fuzzer::FuzzerDriver
        line: 862
        signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
          unsigned long))
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
        type: source
      - depth: 6
        func_name: main
        line: 20
        signature: main
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
        type: source
      - binary: ../lib/x86_64-linux-gnu/libc.so.6
        build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
        depth: 7
        func_name: __libc_start_main
        offset: 147586
        signature: __libc_start_main
        type: binary
      - binary: ../(/out/filein_harness+0x3c6fd)
        depth: 8
        func_name: _start
        signature: _start
        type: maybe_asan_interceptor
      triggered_sanitizers:
      - id_1
    triggered_sanitizers: !!set
      id_1: null
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDEwMzMwNDg2MgogSU5GTzogTG9hZGVkIDEgbW9kdWxlcyAgICg2OSBpbmxp
    bmUgOC1iaXQgY291bnRlcnMpOiA2OSBbMHg1NTU1NTU3NWUyYzAsIDB4NTU1NTU1NzVlMzA1KSwg
    CiBJTkZPOiBMb2FkZWQgMSBQQyB0YWJsZXMgKDY5IFBDcyk6IDY5IFsweDU1NTU1NTc1ZTMwOCww
    eDU1NTU1NTc1ZTc1OCksIAogL291dC9maWxlaW5faGFybmVzczogUnVubmluZyAxIGlucHV0cyAx
    IHRpbWUocykgZWFjaC4KIFJ1bm5pbmc6IC93b3JrL3RtcF9ibG9iCiAuLi9zYW1wbGVzL21vY2tf
    dnAuYzoxMjoxNzogcnVudGltZSBlcnJvcjogaW5kZXggMyBvdXQgb2YgYm91bmRzIGZvciB0eXBl
    ICdjaGFyWzNdWzEwXScKIFNVTU1BUlk6IFVuZGVmaW5lZEJlaGF2aW9yU2FuaXRpemVyOiB1bmRl
    ZmluZWQtYmVoYXZpb3IgLi4vc2FtcGxlcy9tb2NrX3ZwLmM6MTI6MTcgaW4gCiA9PT09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQog
    PT0xMz09RVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6IGdsb2JhbC1idWZmZXItb3ZlcmZsb3cgb24g
    YWRkcmVzcyAweDU1NTU1NjBlNzliZSBhdCBwYyAweDU1NTU1NTYzZDA4NiBicCAweDdmZmZmZmZm
    ZTI2MCBzcCAweDdmZmZmZmZmZGEyMAogUkVBRCBvZiBzaXplIDEgYXQgMHg1NTU1NTYwZTc5YmUg
    dGhyZWFkIFQwCiAgICAgIzAgMHg1NTU1NTU2M2QwODUgaW4gc3RyY3NwbiAvc3JjL2xsdm0tcHJv
    amVjdC9jb21waWxlci1ydC9saWIvYXNhbi8uLi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9j
    b21tb25faW50ZXJjZXB0b3JzLmluYzo3Njc6NQogICAgICMxIDB4NTU1NTU1NmZhYWVhIGluIGZ1
    bmNfYSAoL291dC9maWxlaW5faGFybmVzcysweDFhNmFlYSkKICAgICAjMiAweDU1NTU1NTZmYjc3
    MSBpbiBMTFZNRnV6emVyVGVzdE9uZUlucHV0ICgvb3V0L2ZpbGVpbl9oYXJuZXNzKzB4MWE3Nzcx
    KQogICAgICMzIDB4NTU1NTU1NWFmNDkwIGluIGZ1enplcjo6RnV6emVyOjpFeGVjdXRlQ2FsbGJh
    Y2sodW5zaWduZWQgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcpIC9zcmMvbGx2bS1wcm9qZWN0
    L2NvbXBpbGVyLXJ0L2xpYi9mdXp6ZXIvRnV6emVyTG9vcC5jcHA6NjE0OjEzCiAgICAgIzQgMHg1
    NTU1NTU1OTljMjQgaW4gZnV6emVyOjpSdW5PbmVUZXN0KGZ1enplcjo6RnV6emVyKiwgY2hhciBj
    b25zdCosIHVuc2lnbmVkIGxvbmcpIC9zcmMvbGx2bS1wcm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9m
    dXp6ZXIvRnV6emVyRHJpdmVyLmNwcDozMjc6NgogICAgICM1IDB4NTU1NTU1NTlmNmJhIGluIGZ1
    enplcjo6RnV6emVyRHJpdmVyKGludCosIGNoYXIqKiosIGludCAoKikodW5zaWduZWQgY2hhciBj
    b25zdCosIHVuc2lnbmVkIGxvbmcpKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIv
    ZnV6emVyL0Z1enplckRyaXZlci5jcHA6ODYyOjkKICAgICAjNiAweDU1NTU1NTVjYmFiMiBpbiBt
    YWluIC9zcmMvbGx2bS1wcm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9mdXp6ZXIvRnV6emVyTWFpbi5j
    cHA6MjA6MTAKICAgICAjNyAweDdmZmZmN2E1OTA4MiBpbiBfX2xpYmNfc3RhcnRfbWFpbiAoL2xp
    Yi94ODZfNjQtbGludXgtZ251L2xpYmMuc28uNisweDI0MDgyKSAoQnVpbGRJZDogMDcwMjQzMGFl
    ZjVmYTNkZGE0Mzk4NjU2M2U5ZmZjYzQ3ZWZiZDc1ZSkKICAgICAjOCAweDU1NTU1NTU5MDZmZCBp
    biBfc3RhcnQgKC9vdXQvZmlsZWluX2hhcm5lc3MrMHgzYzZmZCkKIAogMHg1NTU1NTYwZTc5YmUg
    aXMgbG9jYXRlZCAzNCBieXRlcyBiZWZvcmUgZ2xvYmFsIHZhcmlhYmxlICdwaXBlZmQnIGRlZmlu
    ZWQgaW4gJ2ZpbGVpbl9oYXJuZXNzLmMnICgweDU1NTU1NjBlNzllMCkgb2Ygc2l6ZSA4CiAweDU1
    NTU1NjBlNzliZSBpcyBsb2NhdGVkIDAgYnl0ZXMgYWZ0ZXIgZ2xvYmFsIHZhcmlhYmxlICdpdGVt
    cycgZGVmaW5lZCBpbiAnZmlsZWluX2hhcm5lc3MuYycgKDB4NTU1NTU2MGU3OWEwKSBvZiBzaXpl
    IDMwCiBTVU1NQVJZOiBBZGRyZXNzU2FuaXRpemVyOiBnbG9iYWwtYnVmZmVyLW92ZXJmbG93IC9z
    cmMvbGx2bS1wcm9qZWN0L2NvbXBpbGVyLXJ0L2xpYi9hc2FuLy4uL3Nhbml0aXplcl9jb21tb24v
    c2FuaXRpemVyX2NvbW1vbl9pbnRlcmNlcHRvcnMuaW5jOjc2Nzo1IGluIHN0cmNzcG4KIFNoYWRv
    dyBieXRlcyBhcm91bmQgdGhlIGJ1Z2d5IGFkZHJlc3M6CiAgIDB4NTU1NTU2MGU3NzAwOiAwMCAw
    MCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBl
    Nzc4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAg
    MHg1NTU1NTYwZTc4MDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwCiAgIDB4NTU1NTU2MGU3ODgwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBlNzkwMDogMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKID0+MHg1NTU1NTYwZTc5ODA6IDAwIDAwIDAwIDAw
    IDAwIDAwIDAwWzA2XWY5IGY5IGY5IGY5IDAwIGY5IGY5IGY5CiAgIDB4NTU1NTU2MGU3YTAwOiAw
    MCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1
    NjBlN2E4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAK
    ICAgMHg1NTU1NTYwZTdiMDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwCiAgIDB4NTU1NTU2MGU3YjgwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMCAwMCAwMCAwMAogICAweDU1NTU1NjBlN2MwMDogMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKIFNoYWRvdyBieXRlIGxlZ2VuZCAob25lIHNo
    YWRvdyBieXRlIHJlcHJlc2VudHMgOCBhcHBsaWNhdGlvbiBieXRlcyk6CiAgIEFkZHJlc3NhYmxl
    OiAgICAgICAgICAgMDAKICAgUGFydGlhbGx5IGFkZHJlc3NhYmxlOiAwMSAwMiAwMyAwNCAwNSAw
    NiAwNyAKICAgSGVhcCBsZWZ0IHJlZHpvbmU6ICAgICAgIGZhCiAgIEZyZWVkIGhlYXAgcmVnaW9u
    OiAgICAgICBmZAogICBTdGFjayBsZWZ0IHJlZHpvbmU6ICAgICAgZjEKICAgU3RhY2sgbWlkIHJl
    ZHpvbmU6ICAgICAgIGYyCiAgIFN0YWNrIHJpZ2h0IHJlZHpvbmU6ICAgICBmMwogICBTdGFjayBh
    ZnRlciByZXR1cm46ICAgICAgZjUKICAgU3RhY2sgdXNlIGFmdGVyIHNjb3BlOiAgIGY4CiAgIEds
    b2JhbCByZWR6b25lOiAgICAgICAgICBmOQogICBHbG9iYWwgaW5pdCBvcmRlcjogICAgICAgZjYK
    ICAgUG9pc29uZWQgYnkgdXNlcjogICAgICAgIGY3CiAgIENvbnRhaW5lciBvdmVyZmxvdzogICAg
    ICBmYwogICBBcnJheSBjb29raWU6ICAgICAgICAgICAgYWMKICAgSW50cmEgb2JqZWN0IHJlZHpv
    bmU6ICAgIGJiCiAgIEFTYW4gaW50ZXJuYWw6ICAgICAgICAgICBmZQogICBMZWZ0IGFsbG9jYSBy
    ZWR6b25lOiAgICAgY2EKICAgUmlnaHQgYWxsb2NhIHJlZHpvbmU6ICAgIGNiCiA9PTEzPT1BQk9S
    VElORwo=
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720061492.775551
  time_start: 1720061488.5759091
  time_taken: 4.199641942977905
target_id: 1
