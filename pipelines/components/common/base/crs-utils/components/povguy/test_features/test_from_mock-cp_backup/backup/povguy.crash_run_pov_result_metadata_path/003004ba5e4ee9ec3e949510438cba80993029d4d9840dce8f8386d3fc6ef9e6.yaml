cp_harness_binary_path: out/filein_harness
cp_harness_id: id_1
cp_harness_name: filein_harness
cp_harness_source_path: src/test/filein_harness.c
crash_report_id: 7c4699dcd770c3b420ac25ca40ee6afedcfee62d321288344cd475fff8429892
fuzzer: aflplusplus
harness_info_id: 6266084036248297570
original_crash_id: 003004ba5e4ee9ec3e949510438cba80993029d4d9840dce8f8386d3fc6ef9e6
run_pov_result:
  cid: d328253166a76e39824b055992c2a37909bfc126e71aeaba8f03fc6db6355926
  exitcode: 0
  pov:
    reports:
    - error_line: 'ERROR: AddressSanitizer: global-buffer-overflow on address 0x<REDACTED>
        at pc 0x<REDACTED> bp 0x<REDACTED> sp 0x<REDACTED>'
      report: "\n READ of size <REDACTED> at 0x<REDACTED> thread T0\n     #0 0x<REDACTED>\
        \ in strcspn /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\n\
        \     #1 0x<REDACTED> in func_a (/out/filein_harness+0x1a6aea)\n     #2 0x<REDACTED>\
        \ in LLVMFuzzerTestOneInput (/out/filein_harness+0x1a7771)\n     #3 0x<REDACTED>\
        \ in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)\
        \ /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\n     #4\
        \ 0x<REDACTED> in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned\
        \ long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6\n\
        \     #5 0x<REDACTED> in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned\
        \ char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9\n\
        \     #6 0x<REDACTED> in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n\
        \     #7 0x<REDACTED> in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)\
        \ (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)\n     #8 0x<REDACTED>\
        \ in _start (/out/filein_harness+0x3c6fd)\n \n 0x<REDACTED> is located <REDACTED>\
        \ bytes before global variable 'pipefd' defined in 'filein_harness.c' (0x<REDACTED>)\
        \ of size <REDACTED>\n 0x<REDACTED> is located <REDACTED> bytes after global\
        \ variable 'items' defined in 'filein_harness.c' (0x<REDACTED>) of size <REDACTED>\n\
        \ SUMMARY: AddressSanitizer: global-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:767:5\
        \ in strcspn\n Shadow bytes around the buggy address:\n   0x<REDACTED>: 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00\
        \ 00 00 00 00 00 00 00\n =>0x<REDACTED>: 00 00 00 00 00 00 00[06]f9 f9 f9\
        \ f9 00 f9 f9 f9\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00 00 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\
        \ 00\n   0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n \
        \  0x<REDACTED>: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x<REDACTED>:\
        \ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n Shadow byte legend (one\
        \ shadow byte represents 8 application bytes):\n   Addressable:          \
        \ 00\n   Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:\
        \       fa\n   Freed heap region:       fd\n   Stack left redzone:      f1\n\
        \   Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack\
        \ after return:      f5\n   Stack use after scope:   f8\n   Global redzone:\
        \          f9\n   Global init order:       f6\n   Poisoned by user:      \
        \  f7\n   Container overflow:      fc\n   Array cookie:            ac\n  \
        \ Intra object redzone:    bb\n   ASan internal:           fe\n   Left alloca\
        \ redzone:     ca\n   Right alloca redzone:    cb\n <MARKER>ABORTING"
      stacktraces:
      - depth: 0
        func_name: strcspn
        line: 767
        signature: strcspn
        src_file: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc
        src_loc: llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:767
        type: source
      - binary: ../(/out/filein_harness+0x1a6aea)
        depth: 1
        func_name: func_a
        signature: func_a
        type: maybe_asan_interceptor
      - binary: ../(/out/filein_harness+0x1a7771)
        depth: 2
        func_name: LLVMFuzzerTestOneInput
        signature: LLVMFuzzerTestOneInput
        type: maybe_asan_interceptor
      - depth: 3
        func_name: fuzzer::Fuzzer::ExecuteCallback
        line: 614
        signature: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned
          long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614
        type: source
      - depth: 4
        func_name: fuzzer::RunOneTest
        line: 327
        signature: fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327
        type: source
      - depth: 5
        func_name: fuzzer::FuzzerDriver
        line: 862
        signature: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*,
          unsigned long))
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862
        type: source
      - depth: 6
        func_name: main
        line: 20
        signature: main
        src_file: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp
        src_loc: llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
        type: source
      - binary: ../lib/x86_64-linux-gnu/libc.so.6
        build_id: 0702430aef5fa3dda43986563e9ffcc47efbd75e
        depth: 7
        func_name: __libc_start_main
        offset: 147586
        signature: __libc_start_main
        type: binary
      - binary: ../(/out/filein_harness+0x3c6fd)
        depth: 8
        func_name: _start
        signature: _start
        type: maybe_asan_interceptor
      triggered_sanitizers:
      - id_1
    triggered_sanitizers: !!set
      id_1: null
  stderr: !!binary |
    IElORk86IFJ1bm5pbmcgd2l0aCBlbnRyb3BpYyBwb3dlciBzY2hlZHVsZSAoMHhGRiwgMTAwKS4K
    IElORk86IFNlZWQ6IDI5NzMxMDA0MzYKIElORk86IExvYWRlZCAxIG1vZHVsZXMgICAoNjkgaW5s
    aW5lIDgtYml0IGNvdW50ZXJzKTogNjkgWzB4NTU1NTU1NzVlMmMwLCAweDU1NTU1NTc1ZTMwNSks
    IAogSU5GTzogTG9hZGVkIDEgUEMgdGFibGVzICg2OSBQQ3MpOiA2OSBbMHg1NTU1NTU3NWUzMDgs
    MHg1NTU1NTU3NWU3NTgpLCAKIC9vdXQvZmlsZWluX2hhcm5lc3M6IFJ1bm5pbmcgMSBpbnB1dHMg
    MSB0aW1lKHMpIGVhY2guCiBSdW5uaW5nOiAvd29yay90bXBfYmxvYgogLi4vc2FtcGxlcy9tb2Nr
    X3ZwLmM6MTI6MTc6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IDMgb3V0IG9mIGJvdW5kcyBmb3IgdHlw
    ZSAnY2hhclszXVsxMF0nCiBTVU1NQVJZOiBVbmRlZmluZWRCZWhhdmlvclNhbml0aXplcjogdW5k
    ZWZpbmVkLWJlaGF2aW9yIC4uL3NhbXBsZXMvbW9ja192cC5jOjEyOjE3IGluIAogPT09PT09PT09
    PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
    ID09MTQ9PUVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiBnbG9iYWwtYnVmZmVyLW92ZXJmbG93IG9u
    IGFkZHJlc3MgMHg1NTU1NTYwZTc5YmUgYXQgcGMgMHg1NTU1NTU2M2QwODYgYnAgMHg3ZmZmZmZm
    ZmUyNjAgc3AgMHg3ZmZmZmZmZmRhMjAKIFJFQUQgb2Ygc2l6ZSAyIGF0IDB4NTU1NTU2MGU3OWJl
    IHRocmVhZCBUMAogICAgICMwIDB4NTU1NTU1NjNkMDg1IGluIHN0cmNzcG4gL3NyYy9sbHZtLXBy
    b2plY3QvY29tcGlsZXItcnQvbGliL2FzYW4vLi4vc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJf
    Y29tbW9uX2ludGVyY2VwdG9ycy5pbmM6NzY3OjUKICAgICAjMSAweDU1NTU1NTZmYWFlYSBpbiBm
    dW5jX2EgKC9vdXQvZmlsZWluX2hhcm5lc3MrMHgxYTZhZWEpCiAgICAgIzIgMHg1NTU1NTU2ZmI3
    NzEgaW4gTExWTUZ1enplclRlc3RPbmVJbnB1dCAoL291dC9maWxlaW5faGFybmVzcysweDFhNzc3
    MSkKICAgICAjMyAweDU1NTU1NTVhZjQ5MCBpbiBmdXp6ZXI6OkZ1enplcjo6RXhlY3V0ZUNhbGxi
    YWNrKHVuc2lnbmVkIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVj
    dC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplckxvb3AuY3BwOjYxNDoxMwogICAgICM0IDB4
    NTU1NTU1NTk5YzI0IGluIGZ1enplcjo6UnVuT25lVGVzdChmdXp6ZXI6OkZ1enplciosIGNoYXIg
    Y29uc3QqLCB1bnNpZ25lZCBsb25nKSAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIv
    ZnV6emVyL0Z1enplckRyaXZlci5jcHA6MzI3OjYKICAgICAjNSAweDU1NTU1NTU5ZjZiYSBpbiBm
    dXp6ZXI6OkZ1enplckRyaXZlcihpbnQqLCBjaGFyKioqLCBpbnQgKCopKHVuc2lnbmVkIGNoYXIg
    Y29uc3QqLCB1bnNpZ25lZCBsb25nKSkgL3NyYy9sbHZtLXByb2plY3QvY29tcGlsZXItcnQvbGli
    L2Z1enplci9GdXp6ZXJEcml2ZXIuY3BwOjg2Mjo5CiAgICAgIzYgMHg1NTU1NTU1Y2JhYjIgaW4g
    bWFpbiAvc3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvZnV6emVyL0Z1enplck1haW4u
    Y3BwOjIwOjEwCiAgICAgIzcgMHg3ZmZmZjdhNTkwODIgaW4gX19saWJjX3N0YXJ0X21haW4gKC9s
    aWIveDg2XzY0LWxpbnV4LWdudS9saWJjLnNvLjYrMHgyNDA4MikgKEJ1aWxkSWQ6IDA3MDI0MzBh
    ZWY1ZmEzZGRhNDM5ODY1NjNlOWZmY2M0N2VmYmQ3NWUpCiAgICAgIzggMHg1NTU1NTU1OTA2ZmQg
    aW4gX3N0YXJ0ICgvb3V0L2ZpbGVpbl9oYXJuZXNzKzB4M2M2ZmQpCiAKIDB4NTU1NTU2MGU3OWJl
    IGlzIGxvY2F0ZWQgMzQgYnl0ZXMgYmVmb3JlIGdsb2JhbCB2YXJpYWJsZSAncGlwZWZkJyBkZWZp
    bmVkIGluICdmaWxlaW5faGFybmVzcy5jJyAoMHg1NTU1NTYwZTc5ZTApIG9mIHNpemUgOAogMHg1
    NTU1NTYwZTc5YmUgaXMgbG9jYXRlZCAwIGJ5dGVzIGFmdGVyIGdsb2JhbCB2YXJpYWJsZSAnaXRl
    bXMnIGRlZmluZWQgaW4gJ2ZpbGVpbl9oYXJuZXNzLmMnICgweDU1NTU1NjBlNzlhMCkgb2Ygc2l6
    ZSAzMAogU1VNTUFSWTogQWRkcmVzc1Nhbml0aXplcjogZ2xvYmFsLWJ1ZmZlci1vdmVyZmxvdyAv
    c3JjL2xsdm0tcHJvamVjdC9jb21waWxlci1ydC9saWIvYXNhbi8uLi9zYW5pdGl6ZXJfY29tbW9u
    L3Nhbml0aXplcl9jb21tb25faW50ZXJjZXB0b3JzLmluYzo3Njc6NSBpbiBzdHJjc3BuCiBTaGFk
    b3cgYnl0ZXMgYXJvdW5kIHRoZSBidWdneSBhZGRyZXNzOgogICAweDU1NTU1NjBlNzcwMDogMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYw
    ZTc3ODA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiAg
    IDB4NTU1NTU2MGU3ODAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMAogICAweDU1NTU1NjBlNzg4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTc5MDA6IDAwIDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiA9PjB4NTU1NTU2MGU3OTgwOiAwMCAwMCAwMCAw
    MCAwMCAwMCAwMFswNl1mOSBmOSBmOSBmOSAwMCBmOSBmOSBmOQogICAweDU1NTU1NjBlN2EwMDog
    MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1
    NTYwZTdhODA6IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
    CiAgIDB4NTU1NTU2MGU3YjAwOiAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
    MCAwMCAwMCAwMAogICAweDU1NTU1NjBlN2I4MDogMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAg
    MDAgMDAgMDAgMDAgMDAgMDAgMDAKICAgMHg1NTU1NTYwZTdjMDA6IDAwIDAwIDAwIDAwIDAwIDAw
    IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwCiBTaGFkb3cgYnl0ZSBsZWdlbmQgKG9uZSBz
    aGFkb3cgYnl0ZSByZXByZXNlbnRzIDggYXBwbGljYXRpb24gYnl0ZXMpOgogICBBZGRyZXNzYWJs
    ZTogICAgICAgICAgIDAwCiAgIFBhcnRpYWxseSBhZGRyZXNzYWJsZTogMDEgMDIgMDMgMDQgMDUg
    MDYgMDcgCiAgIEhlYXAgbGVmdCByZWR6b25lOiAgICAgICBmYQogICBGcmVlZCBoZWFwIHJlZ2lv
    bjogICAgICAgZmQKICAgU3RhY2sgbGVmdCByZWR6b25lOiAgICAgIGYxCiAgIFN0YWNrIG1pZCBy
    ZWR6b25lOiAgICAgICBmMgogICBTdGFjayByaWdodCByZWR6b25lOiAgICAgZjMKICAgU3RhY2sg
    YWZ0ZXIgcmV0dXJuOiAgICAgIGY1CiAgIFN0YWNrIHVzZSBhZnRlciBzY29wZTogICBmOAogICBH
    bG9iYWwgcmVkem9uZTogICAgICAgICAgZjkKICAgR2xvYmFsIGluaXQgb3JkZXI6ICAgICAgIGY2
    CiAgIFBvaXNvbmVkIGJ5IHVzZXI6ICAgICAgICBmNwogICBDb250YWluZXIgb3ZlcmZsb3c6ICAg
    ICAgZmMKICAgQXJyYXkgY29va2llOiAgICAgICAgICAgIGFjCiAgIEludHJhIG9iamVjdCByZWR6
    b25lOiAgICBiYgogICBBU2FuIGludGVybmFsOiAgICAgICAgICAgZmUKICAgTGVmdCBhbGxvY2Eg
    cmVkem9uZTogICAgIGNhCiAgIFJpZ2h0IGFsbG9jYSByZWR6b25lOiAgICBjYgogPT0xND09QUJP
    UlRJTkcK
  stdout: !!binary |
    IGxpYmZ1enplciBleGl0PTEK
  time_end: 1720060066.3840597
  time_start: 1720060061.5250397
  time_taken: 4.859019994735718
target_id: 1
