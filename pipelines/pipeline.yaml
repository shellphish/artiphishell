repos:
  all_targets_with_sources:
    cls: CokeyedJqFilterRepository
    args:
      source: targets_with_sources
      filter_source: target_metadatas
      filter_query: 'true'
  all_target_metadatas:
    cls: CokeyedJqFilterRepository
    args:
      source: target_metadatas
      filter_source: target_metadatas
      filter_query: 'true'

  java_targets_with_sources:
    cls: CokeyedJqFilterRepository
    args:
      source: targets_with_sources
      filter_source: target_metadatas
      filter_query: '.language == "java"'
  java_target_metadatas:
    cls: CokeyedJqFilterRepository
    args:
      source: target_metadatas
      filter_source: target_metadatas
      filter_query: '.language == "java"'

  c_targets_with_sources:
    cls: CokeyedJqFilterRepository
    args:
      source: targets_with_sources
      filter_source: target_metadatas
      filter_query: '.language == "c"'
  c_target_metadatas:
    cls: CokeyedJqFilterRepository
    args:
      source: target_metadatas
      filter_source: target_metadatas
      filter_query: '.language == "c"'

  kernel_targets_with_sources:
    cls: CokeyedJqFilterRepository
    args:
      source: c_targets_with_sources
      filter_source: target_metadatas
      filter_query: '(.shellphish.known_sources | has("linux_kernel")) and (.shellphish.known_sources.linux_kernel | length > 0)'
  kernel_target_metadatas:
    cls: CokeyedJqFilterRepository
    args:
      source: target_metadatas
      filter_source: target_metadatas
      filter_query: '(.shellphish.known_sources | has("linux_kernel")) and (.shellphish.known_sources.linux_kernel | length > 0)'

  all_non_kernel_targets_with_sources:
    cls: CokeyedJqFilterRepository
    args:
      source: targets_with_sources
      filter_source: target_metadatas
      filter_query: '(.shellphish.known_sources | has("linux_kernel") | not) or (.shellphish.known_sources.linux_kernel | length == 0)'

  non_kernel_c_targets_with_sources:
    cls: CokeyedJqFilterRepository
    args:
      source: c_targets_with_sources
      filter_source: target_metadatas
      filter_query: '(.shellphish.known_sources | has("linux_kernel") | not) or (.shellphish.known_sources.linux_kernel | length == 0)'

  non_kernel_c_target_metadatas:
    cls: CokeyedJqFilterRepository
    args:
      source: target_metadatas
      filter_source: target_metadatas
      filter_query: '(.shellphish.known_sources | has("linux_kernel") | not) or (.shellphish.known_sources.linux_kernel | length == 0)'

repo_classes:
  targets_with_sources: FilesystemRepository
  debug_built_targets_with_sources: FilesystemRepository
  cp_image_ready: MetadataRepository
  target_metadatas: MetadataRepository
  target_harness_infos: MetadataRepository
  target_directed_fuzz_requests: MetadataRepository
  info_extraction_requests: MetadataRepository
  target_directed_seeds: FilesystemRepository
  targets_with_sources_for_fuzzing: FilesystemRepository
  full_functions_indices: BlobRepository
  full_functions_jsons_dirs: FilesystemRepository
  full_functions_index_csvs: BlobRepository
  full_functions_by_file_index_jsons: BlobRepository
  commit_functions_indices: BlobRepository
  commit_functions_jsons_dirs: FilesystemRepository
  commit_functions_index_csvs: BlobRepository
  libfuzzer_reaching_functions_dicts: BlobRepository
  libfuzzer_reaching_files_dicts: BlobRepository

  codeql_reports: BlobRepository
  codeql_qlpack_reports: BlobRepository
  codeql_targets_strings: FilesystemRepository
  crashing_inputs: BlobRepository
  crashing_reports: BlobRepository
  crashing_inputs_metadatas: MetadataRepository
  info_extraction_results: MetadataRepository

  crashing_harness_inputs: BlobRepository
  crashing_harness_inputs_metadatas: MetadataRepository
  crashing_harness_inputs_coverages: BlobRepository
  benign_harness_inputs: BlobRepository
  benign_harness_inputs_metadatas: MetadataRepository
  benign_harness_inputs_coverages: BlobRepository
  to_be_triaged_harness_inputs: BlobRepository
  to_be_triaged_harness_inputs_metadatas: MetadataRepository
  benign_coverages_full_report: BlobRepository

  crashing_commits: MetadataRepository
  points_of_interest: MetadataRepository
  patch_diffs: BlobRepository
  patch_metadatas: MetadataRepository
  kernel_reachability_results: MetadataRepository

  target_start_times: MetadataRepository

  post_patch_run_pov_result_metadata_path: MetadataRepository

  crash_run_pov_result_metadatas: MetadataRepository
  RAW_pov_reports: MetadataRepository
  RAW_pov_report_representative_crashing_inputs: BlobRepository
  RAW_pov_report_representative_crashing_input_metadatas: MetadataRepository

  pov_report_representative_crashing_input_metadatas: MetadataRepository
  pov_report_representative_crashing_inputs: BlobRepository
  pov_reports: MetadataRepository


imports:
  preprocessing:
    path: ./subpipelines/preprocessing/pipeline.yaml
    repos:
      raw_targets_with_sources: targets_with_sources
      all_non_kernel_targets_with_sources: all_non_kernel_targets_with_sources
      targets_with_sources: all_targets_with_sources
      cp_image_ready: cp_image_ready
      c_targets_with_sources: c_targets_with_sources
      non_kernel_c_targets_with_sources: non_kernel_c_targets_with_sources
      java_targets_with_sources: java_targets_with_sources
      debug_built_targets_with_sources: debug_built_targets_with_sources

      target_metadatas: target_metadatas
      target_start_times: target_start_times
      harness_infos: target_harness_infos
      info_extraction_requests: info_extraction_requests
      target_directed_fuzz_requests: target_directed_fuzz_requests
      target_directed_seeds: target_directed_seeds
      kernel_reachability_results: kernel_reachability_results

      codeql_reports: codeql_reports
      codeql_qlpack_reports: codeql_qlpack_reports
      codeql_targets_strings: codeql_targets_strings
      full_functions_indices: full_functions_indices
      full_functions_jsons_dirs: full_functions_jsons_dirs
      full_functions_index_csvs: full_functions_index_csvs
      full_functions_by_file_index_jsons: full_functions_by_file_index_jsons
      commit_functions_indices: commit_functions_indices
      commit_functions_jsons_dirs: commit_functions_jsons_dirs
      commit_functions_index_csvs: commit_functions_index_csvs
      info_extraction_results: info_extraction_results
      libfuzzer_reaching_functions_dicts: libfuzzer_reaching_functions_dicts
      libfuzzer_reaching_files_dicts: libfuzzer_reaching_files_dicts

      crashing_harness_inputs: crashing_harness_inputs
      crashing_harness_inputs_metadatas: crashing_harness_inputs_metadatas
      crash_run_pov_result_metadatas: crash_run_pov_result_metadatas
      RAW_pov_reports: RAW_pov_reports
      RAW_pov_report_representative_crashing_inputs: RAW_pov_report_representative_crashing_inputs
      RAW_pov_report_representative_crashing_input_metadatas: RAW_pov_report_representative_crashing_input_metadatas
      patch_diffs: patch_diffs
      patch_metadatas: patch_metadatas

  generic_c:
    path: ./subpipelines/generic_c/pipeline.yaml
    repos:
      targets_with_sources: non_kernel_c_targets_with_sources
      cp_image_ready: cp_image_ready
      target_metadatas: non_kernel_c_target_metadatas
      target_directed_seeds: target_directed_seeds
      full_functions_indices: full_functions_indices
      full_functions_index_csvs: full_functions_index_csvs
      full_functions_jsons_dirs: full_functions_jsons_dirs
      points_of_interest: points_of_interest
      harness_infos: target_harness_infos
      fuzz_requests: target_directed_fuzz_requests
      info_extraction_requests: info_extraction_requests
      info_extraction_results: info_extraction_results
      crashing_harness_inputs: crashing_harness_inputs
      crashing_harness_inputs_metadatas: crashing_harness_inputs_metadatas
      benign_harness_inputs: benign_harness_inputs
      benign_harness_inputs_metadatas: benign_harness_inputs_metadatas
      libfuzzer_reaching_functions_dicts: libfuzzer_reaching_functions_dicts
      libfuzzer_reaching_files_dicts: libfuzzer_reaching_files_dicts
      pov_report_representative_crashing_input_metadatas: pov_report_representative_crashing_input_metadatas


  linux:
    path: ./subpipelines/linux/pipeline.yaml
    repos:
      cp_image_ready: cp_image_ready
      kernel_targets_with_sources: kernel_targets_with_sources
      target_metadatas: kernel_target_metadatas
      target_harness_infos: target_harness_infos
      poiguy_full_functions_index_csvs: full_functions_index_csvs
      points_of_interest: points_of_interest
      kernel_reachability_results: kernel_reachability_results
      pov_report_representative_crashing_input_metadatas: pov_report_representative_crashing_input_metadatas

      snapchange_built_targets: debug_built_targets_with_sources

      crashing_harness_inputs: crashing_harness_inputs
      crashing_harness_inputs_metadatas: crashing_harness_inputs_metadatas
      crashing_harness_inputs_coverages: crashing_harness_inputs_coverages
      benign_harness_inputs: benign_harness_inputs
      benign_harness_inputs_metadatas: benign_harness_inputs_metadatas
      benign_harness_inputs_coverages: benign_harness_inputs_coverages


  jenkins:
    path: ./subpipelines/jenkins/pipeline.yaml
    repos:
      cp_image_ready: cp_image_ready
      java_linted_targets: java_targets_with_sources
      target_metadatas: java_target_metadatas
      harness_infos: target_harness_infos
      target_directed_fuzz_requests: target_directed_fuzz_requests
      crashing_harness_inputs: crashing_harness_inputs
      crashing_harness_inputs_metadatas: crashing_harness_inputs_metadatas
      benign_harness_inputs: benign_harness_inputs
      benign_harness_inputs_metadatas: benign_harness_inputs_metadatas

      points_of_interest: points_of_interest
      poiguy_full_functions_index_csvs: full_functions_index_csvs
      poiguy_full_functions_indices: full_functions_indices
      poiguy_full_functions_jsons_dirs: full_functions_jsons_dirs
      codeql_targets_strings: codeql_targets_strings
      info_extraction_requests: info_extraction_requests
      info_extraction_results: info_extraction_results
      pov_report_representative_crashing_input_metadatas: pov_report_representative_crashing_input_metadatas
      benign_coverages_full_report: benign_coverages_full_report

  postprocessing:
    path: ./subpipelines/postprocessing/pipeline.yaml
    repos:
      cp_image_ready: cp_image_ready
      target_metadatas: target_metadatas
      targets_with_sources: all_targets_with_sources
      java_targets_with_sources: java_targets_with_sources
      non_kernel_c_targets_with_sources: non_kernel_c_targets_with_sources
      target_harness_infos: target_harness_infos

      functions_by_commit_jsons_dirs: commit_functions_jsons_dirs
      commit_functions_indices: commit_functions_indices
      full_functions_indices: full_functions_indices
      full_functions_jsons_dirs: full_functions_jsons_dirs
      full_functions_by_file_index_jsons: full_functions_by_file_index_jsons
      crashing_reports: crashing_reports

      crashing_harness_inputs: crashing_harness_inputs
      crashing_harness_inputs_metadatas: crashing_harness_inputs_metadatas
      crashing_harness_inputs_coverages: crashing_harness_inputs_coverages
      crashing_commits: crashing_commits
      points_of_interest: points_of_interest
      patch_diffs: patch_diffs
      patch_metadatas: patch_metadatas
      target_start_times: target_start_times

      post_patch_run_pov_result_metadata_path: post_patch_run_pov_result_metadata_path

      benign_harness_inputs: benign_harness_inputs
      benign_harness_inputs_metadatas: benign_harness_inputs_metadatas
      benign_harness_inputs_coverages: benign_harness_inputs_coverages
      pov_reports: pov_reports
      pov_report_representative_crashing_inputs: pov_report_representative_crashing_inputs
      pov_report_representative_crashing_input_metadatas: pov_report_representative_crashing_input_metadatas
      benign_coverages_full_report: benign_coverages_full_report

tasks:
  pipeline_inputs:
    links:
      target_with_sources:
        repo: targets_with_sources
        kind: InputFilepath

    executable:
      cls: Container
      args:
        image: "aixcc-dependencies-base"
        template: |
          echo "Hack The Planet!"


  # hooking this up to RAW is a hack that is needed because of `.decode("latin-1") shenanigans in pydatatask's score()``

  # pov_reports:
  #   cls: CokeyedJqFilterRepository
  #   args:
  #     source: RAW_pov_reports
  #     filter_source: RAW_pov_reports
  #     filter_query: '.consistent_sanitizers | length > 0'

  # pov_report_representative_crashing_inputs:
  #   cls: CokeyedJqFilterRepository
  #   args:
  #     source: RAW_pov_report_representative_crashing_inputs
  #     filter_source: RAW_pov_report_representative_crashing_input_metadatas
  #     filter_query: '.consistent_sanitizers | length > 0'

  # pov_report_representative_crashing_input_metadatas:
  #   cls: CokeyedJqFilterRepository
  #   args:
  #     source: RAW_pov_report_representative_crashing_input_metadatas
  #     filter_source: RAW_pov_report_representative_crashing_input_metadatas
  #     filter_query: '.consistent_sanitizers | length > 0'


  # hooking this up to RAW is a hack that is needed because of `.decode("latin-1") shenanigans in pydatatask's score()``
  fuck__pov_reports:
    links:
      raw_pov_report_path:      { repo: RAW_pov_reports, kind: InputFilepath }
      pov_report_path:          { repo: pov_reports,     kind: OutputFilepath, required_for_success: false }
    executable:
      cls: Container
      args:
        image: "aixcc-dependencies-base"
        template: |
          set -x
          if yq e '.consistent_sanitizers | length > 0' {{raw_pov_report_path | shquote}}; then
            echo "Crashing"
            cp {{raw_pov_report_path | shquote}} {{pov_report_path | shquote}} 
          fi

  fuck__get_inputs:
    links:
      raw_pov_report_representative_crashing_input:          { repo: RAW_pov_report_representative_crashing_inputs, kind: InputFilepath }
      raw_pov_report_representative_crashing_input_metadata: { repo: RAW_pov_report_representative_crashing_input_metadatas, kind: InputFilepath }
      pov_report_representative_crashing_input_path:         { repo: pov_report_representative_crashing_inputs, kind: OutputFilepath, required_for_success: false }
    executable:
      cls: Container
      args:
        image: "aixcc-dependencies-base"
        template: |
          set -x
          if yq e '.consistent_sanitizers | length > 0' {{raw_pov_report_representative_crashing_input_metadata | shquote}}; then
            echo "Crashing"
            cp {{raw_pov_report_representative_crashing_input | shquote}} {{pov_report_representative_crashing_input_path | shquote}} 
          fi

  fuck__get_input_metadatas:
    links:
      raw_pov_report_representative_crashing_input_metadata: { repo: RAW_pov_report_representative_crashing_input_metadatas, kind: InputFilepath }
      pov_report_representative_crashing_input_metadata_path: { repo: pov_report_representative_crashing_input_metadatas, kind: OutputFilepath, required_for_success: false }
    executable:
      cls: Container
      args:
        image: "aixcc-dependencies-base"
        template: |
          set -x
          if yq e '.consistent_sanitizers | length > 0' {{raw_pov_report_representative_crashing_input_metadata | shquote}}; then
            echo "Crashing"
            cp {{raw_pov_report_representative_crashing_input_metadata | shquote}} {{pov_report_representative_crashing_input_metadata_path | shquote}} 
          fi

      
