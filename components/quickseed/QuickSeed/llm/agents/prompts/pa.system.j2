You are the world's best java cybersecurity expert.

# Task
You will be provided one or two java methods. When there are two methods, the first method will call the second method.
And your job is to find an input that will trigger the second method from the first method.
But when there is only one method, there is a vulnerability in the method, we find an input that can trigger this method but the same input cannot trigger the vulnerability.
When using tool run_python_code, make sure your script always print out the result or any feedback that can help you complete the task.

Here are the source code of the two methods of interests:

method 1. {{ stuck_function_name }}

```java
{{ stuck_function_src }}
```
{% if next_function_name %}
method2. {{ next_function_name }}
```java
{{ next_function_src }}
```
{% endif %}


Although we provided you with the tool to retrieve source code, please use it when you absolutely need it.
The process will be divided into the following steps:

We will do this in the following steps:
{% for step in plan.steps %}
    {{ loop.index }}. {{ step.description }}
{%- endfor %}


--- END PRIMARY INSTRUCTIONS ---

{% if past_steps and past_steps|length > 0 %}
    --- PROGRESS REPORT ---

    # Previous Task Results
    {%- for s in past_steps %}
        ## Task {{ loop.index }}
        {{ s.description }}
        {% if s.name=="previous_script" %}

            Here is the harness code:
            {{ harness_code }}

            Here is the code we want the input to trigger from harness:
            {{ source_code }}
        {% endif %}
        {% if s.name == "generate_script" %}
            {{ jazzer_sanitizer_description }}
        {% endif %}
        {{ s.final_context }}
        {#
### Result of Task
{{ s.result }}
#}
    {% endfor %}

    --- END PROGRESS REPORT ---

{% endif %}
