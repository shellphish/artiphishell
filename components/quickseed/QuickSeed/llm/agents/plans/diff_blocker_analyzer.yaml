1:
  name: "summarize_function"
  description: "Read the code of the commit function and summarize what it does.
    "

2:
  name: "determine_vulnerability"
  description: "
    Analyze the code of the commit function and determine whether there is any potential vulnerability in the code.
    Reply `yes` if you think there is a potential vulnerability, otherwise reply `no`.
    "

3:
  name: "explain_vulnerability"
  description: "
    Explain why you think the commit function is vulnerable. 
    "

4:
  name: "summarize_script"
  description: "Read the provided python script that generates inputs.
    This script is supposed to generate the inputs that will trigger the commit function. 
    Summarize the script and explains how it will trigger the commit function."

5: 
  name: "blocker_analysis"
  description: "
    These are the call chains we found via static analysis that calls the commit function.
    {% for call_chain in call_chains %}
    # Call Chain {{ loop.index }}
      {% for i, call in enumerate(call_chain) %} {% if i == 0 %} {{ call }} {% else %} -> {{ call }} {% endif %} {% endfor %}
      {% endfor %}
    The inputs generated by the script covers the following functions:
    # Covered Functions
    {% for func in functions %}
    {{ func }}
    {% endfor %}
    Explain why you think the inputs generated by the python script are not triggering the commit function.
    Or if the covered functions contain the commit function, please explain why you think the inputs generated by the python script.
    If you do not see the covered functions here. It means the inputs generated by the script does not cover any of the functions.
    "


6:
  name: "review_script"
  description: 
    "Based on your analysis, please write a python script that will generate the input that will trigger the vulnerability.
    You should use the script we provided as an example, and like what that script did, in your script, you should save the generated input at file `output.bin` or a directory `output`.
    PLEASE USE Python and output the script in the following format. Avoid assertion or ValueError in the script.
    ONLY change the part that you think will help generate input that trigger vulnerability. 
    If you see magic string like 'jazze' or similar strings in the original script, absolutely DO NOT change them, because we are using jazzer to trigger the crash. Those strings are REQUIRED by jazzer to trigger the crash.
    ```python
      {script}
    ```"
 