
{% if IS_DUPLICATE_SCRIPT %}
You are repeating the same script as before. Please make sure to change the script and try again.

{% else %}


{% if SCRIPT_FAILED %}
The previous output was not a valid Python script! Please fix the script and try again.
This is the error message: {{ERROR_MSG}}

{% elif IS_FEEDBACK == 1 %}
The previous seed was very close to triggering the vulnerability. 
Please use the debug tools to analyze the seed's coverage and refine your Python script to achieve a crash.
Also, you can grep through the codebase with SPECIFIC EXPRESSIONS ONLY about variables that will crash the vulnerable function.

NEVER search generic terms like "fuzz" or "harness" as they will not yield useful results. The grep/search tool is a very scarce resource: you can only
use grep **3 times per seed generation**, so make sure you are NOT looking for filenames and other things that you can find with other tools.

Here is the detailed feedback:
{{EXTRA_FEEDBACK}}

{% elif IS_FEEDBACK == 2 %}
The previous seed didn't trigger the vulnerability. 
Please use the debug tools to analyze the seed's coverage and reach the vulnerable function.

Also, you can grep through the codebase with SPECIFIC EXPRESSIONS ONLY about variables that will crash the vulnerable function.
NEVER search generic terms like "fuzz" or "harness" as they will not yield useful results. The grep/search tool is a very scarce resource: you can only
use grep **3 times per seed generation**, so make sure you are NOT looking for filenames and other things that you can find with other tools.

Keep investigating for a way to trigger the vulnerability, refine your Python script, and try again!
<--- feedback --->
Great work! Here is some additional coverage information, please explore the frontier nodes. 
The previous seed successfully covered the following functions:
{{BACKWARD_PATH}}
However, the seed did not reach the following functions on the path towards the vulnerable function. These are the three frontier nodes:
{{FORWARD_PATH}}
Please focus on examining these functions, and craft your next payload with the goal to achieve coverage in it. 

{% else %}

You are given the following vulnerability report:

<--- vulnerability summary -->
Run ID: {{RUN_ID}}
Project name: {{PROJECT_NAME}}
Potential Vulnerability: {{VULN_NAME}}
File name: {{FILE_NAME}}
Harness location: {{HARNESS_NAME}}
Function name: {{VULN_FUNCTION}}.
Affected Lines: {{VULN_LINES}}
Description: {{VULN_DESC}}

The code of the harness is:
```
{{HARNESS_CODE}}
```

<--- exploitation suggestion -->
{{EXPL_DESC}}

{{output_format}}


{% endif %}

{% endif %}