rules:
  - id: cwe-22-stringutils-cleanpath-traversal
    mode: search
    message: "CWE-22: Path Traversal vulnerability. Input to StringUtils.cleanPath() is not validated."
    languages: [java]
    severity: WARNING
    metadata:
      cwe: Path Traversal
      category: security
      confidence: HIGH
      vuln_type: "path-traversal"
      # references:
      #  - "Reference to the specific Spark commit if still relevant: https://github.com/perwendel/spark/commit/030e9d00125cbd1ad759668f85488aba1019c668"

    metavariables:
      $METHOD_OR_CONSTRUCTOR:
        regex: "[a-zA-Z_][a-zA-Z0-9_]*"
      $RAW_PATH_ARG:
        regex: "[a-zA-Z_][a-zA-Z0-9_]*"
      $CLEANED_PATH_VAR:
        regex: "[a-zA-Z_][a-zA-Z0-9_]*"

    patterns:
      - pattern: |
          public $METHOD_OR_CONSTRUCTOR(..., String $RAW_PATH_ARG, ...) {
            ...
            String $CLEANED_PATH_VAR = StringUtils.cleanPath($RAW_PATH_ARG);
            ...
          }

    # This single pattern-not clause will negate the finding if ANY of the
    # patterns inside pattern-either match (i.e., if the code is fixed in one of these ways).
    pattern-not:
      pattern-either:
        # Fix Case 1: Assert.isTrue(isValid(...))
        - pattern: |
            public $METHOD_OR_CONSTRUCTOR(..., String $RAW_PATH_ARG, ...) {
              ...
              Assert.isTrue(isValid($RAW_PATH_ARG), ...);
              ... // Ellipsis to allow code between validation and cleanPath
              String $CLEANED_PATH_VAR = StringUtils.cleanPath($RAW_PATH_ARG);
              ...
            }
        # Fix Case 2: if (!isValid(...)) { throw ...; }
        - pattern: |
            public $METHOD_OR_CONSTRUCTOR(..., String $RAW_PATH_ARG, ...) {
              ...
              if (!isValid($RAW_PATH_ARG)) {
                throw ...;
              }
              ... // Ellipsis to allow code between validation and cleanPath
              String $CLEANED_PATH_VAR = StringUtils.cleanPath($RAW_PATH_ARG);
              ...
            }
        # Fix Case 3: if (isInvalidPath(...)) { throw ...; }
        - pattern: |
            public $METHOD_OR_CONSTRUCTOR(..., String $RAW_PATH_ARG, ...) {
              ...
              if (isInvalidPath($RAW_PATH_ARG)) {
                throw ...;
              }
              ... // Ellipsis to allow code between validation and cleanPath
              String $CLEANED_PATH_VAR = StringUtils.cleanPath($RAW_PATH_ARG);
              ...
            }
        # Fix Case 4: Assert.isFalse(isInvalidPath(...))
        - pattern: |
            public $METHOD_OR_CONSTRUCTOR(..., String $RAW_PATH_ARG, ...) {
              ...
              Assert.isFalse(isInvalidPath($RAW_PATH_ARG), ...);
              ... // Ellipsis to allow code between validation and cleanPath
              String $CLEANED_PATH_VAR = StringUtils.cleanPath($RAW_PATH_ARG);
              ...
            }