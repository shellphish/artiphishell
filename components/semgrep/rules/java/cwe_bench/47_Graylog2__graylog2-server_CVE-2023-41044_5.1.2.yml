rules:
  - id: java-path-traversal-insecure-getcanonicalpath-startswith
    message: >-
      Potential path traversal (CWE-22) with '$TARGET_EXPR.toFile().getCanonicalPath().startsWith($BASE_EXPR.toFile().getCanonicalPath())'.
      This pattern can allow sibling directory access if the canonical path of '$BASE_EXPR' (the base directory)
      lacks a trailing file separator (e.g., '/').
      For a more robust check, use 'Path.toAbsolutePath().normalize()' on both expressions
      and then compare them using 'Path.startsWith(Path)'.
    languages:
      - java
    severity: ERROR
    metadata:
      cwe: "Path Traversal"
      vuln_type: "path-traversal"
      category: security
      confidence: HIGH
    patterns:
      - pattern-either:
          - pattern: $TARGET_EXPR.getCanonicalPath().startsWith($BASE_EXPR.getCanonicalPath())
          - pattern: $TARGET_EXPR.getAbsolutePath().startsWith($BASE_EXPR.getAbsolutePath())
          - pattern: $TARGET_EXPR.getPath().startsWith($BASE_EXPR.getPath())
      - pattern-not: $TARGET_EXPR.toAbsolutePath().normalize().startsWith($BASE_EXPR.toAbsolutePath().normalize())
    metavariables:
      $TARGET_EXPR:
        regex: "[a-zA-Z_][a-zA-Z0-9_]*"
      $BASE_EXPR:
        regex: "[a-zA-Z_][a-zA-Z0-9_]*"
