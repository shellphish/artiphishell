rules:
  - id: java-zipslip-string-startswith-sibling-bypass-specific-signature
    message: >-
      Potential Path Traversal (CWE-22): In a 'public static void' method, using 'String.startsWith()'
      to compare a resolved entry path (e.g., from ZipEntry.getName(), normalized and made absolute)
      against the raw target directory string parameter can be bypassed if the target
      directory string does not have a trailing file separator. This could allow
      access to sibling directories or files that share the same prefix as the target directory.
      Example: if targetDir is "/foo/bar" and the entry path resolves to "/foo/bar_evil",
      the check ' "/foo/bar_evil".startsWith("/foo/bar") ' passes.
      The fix involves converting both to normalized Path objects and using 'Path.startsWith(Path)'.
    languages:
      - java
    severity: ERROR
    metadata:
      cwe: "Path Traversal"
      vuln_type: "path-traversal"
      category: security
      confidence: HIGH
    patterns:
      - pattern: |
          public static void $METH_NAME(..., String $TARGET_DIR_STR_PARAM, ...) {
            ...
            if (!$ANY_PATH_OBJECT_VAR.startsWith($TARGET_DIR_STR_PARAM)) {
              ...
            }
            ...
          }

      - pattern-not: |
          public static void $METH_NAME(..., String $TARGET_DIR_STR_PARAM, ...) {
            ...
            if (!$ANY_PATH_OBJECT_VAR.startsWith(Path.of($TARGET_DIR_STR_PARAM).normalize())) {
              ...
            }
            ...
          }
