apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: host-config-priority
value: 1000000000
globalDefault: false
description: "Priority class for fuzzer host config"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: host-config
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      name: host-config
  template:
    metadata:
      labels:
        name: host-config
    spec:
      nodeSelector:
        kubernetes.azure.com/mode: user
      priorityClassName: system-node-critical
      imagePullSecrets:
        - name: acr-docker-secret
        - name: ci-acr-pull-secret
      tolerations:
      - operator: Exists
      initContainers:
      - name: init-host
        image: "{{ .Values.global.deployment_registry.value }}/busybox"
        command: ["/bin/sh", "-c"]
        args:
        - |
          cat /proc/sys/kernel/core_pattern
          echo core | tee /proc/sys/kernel/core_pattern || true
          cat /proc/sys/kernel/core_pattern

          cat /proc/sys/kernel/randomize_va_space
          echo 0 | tee /proc/sys/kernel/randomize_va_space || true
          cat /proc/sys/kernel/randomize_va_space

          cat /proc/sys/fs/inotify/max_user_watches
          echo 524288 | tee /proc/sys/fs/inotify/max_user_watches || true
          cat /proc/sys/fs/inotify/max_user_watches

          (
            cd /sys/devices/system/cpu && \
            echo performance | tee cpu*/cpufreq/scaling_governor
          ) || true

          mkdir -p /shared/injected-seeds

          # TODO replace this with autogenerated key
          echo -e '-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW\nQyNTUxOQAAACD+W+iPPxfeQIdrcDmWfbPL+vVfqMAjQdZTu45oMdIhkwAAAJBt/ckMbf3J\nDAAAAAtzc2gtZWQyNTUxOQAAACD+W+iPPxfeQIdrcDmWfbPL+vVfqMAjQdZTu45oMdIhkw\nAAAEC3ozVD5VdJBkY7IGR6lmpurNonNwHpA1lEpd/N1oYzx/5b6I8/F95Ah2twOZZ9s8v6\n9V+owCNB1lO7jmgx0iGTAAAACG55YW5AYm94AQIDBAU=\n-----END OPENSSH PRIVATE KEY-----' > /shared/sync-ssh-key
          chmod 600 /shared/sync-ssh-key

        volumeMounts:
        - name: host-shared
          mountPath: /shared
        resources:
          requests:
            cpu: 10m
            memory: 200Mi
          limits:
            cpu: 10m
            memory: 200Mi
        securityContext:
          privileged: true
      containers:
      - name: host-config
        image: {{ .Values.global.deployment_registry.value }}/aixcc-dependencies-base:latest
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -ex
          echo "Fuzzer host config container is running..."

          apt-get update && apt-get install -y openssh-server
          mkdir -p /root/.ssh
          cp /etc/ssh-keys/authorized_keys /root/.ssh/authorized_keys
          chmod 600 /root/.ssh/authorized_keys

          sed -i 's/#ListenAddress 0.0.0.0/ListenAddress 0.0.0.0/' /etc/ssh/sshd_config
          service ssh restart

          echo "Configuring ccache..."

          mkdir -p /shared/ccache
          chmod 777 /shared/ccache

          export CCACHE_DIR=/shared/ccache

          ccache --set-config max_size=100G
          ccache --set-config compression=true
          ccache --set-config compression_level=2

          sleep 20

          # Pull any images which we want to have cached on the node ASAP

          export DOCKER_HOST=tcp://docker-builder:2375

          TAG_VER=v1.3.0

          function pull_aixcc_image() {
            docker pull ghcr.io/aixcc-finals/$1:${TAG_VER} || true
          }
          pull_aixcc_image base-runner
          pull_aixcc_image base-builder
          pull_aixcc_image base-clang
          pull_aixcc_image base-builder-jvm
          pull_aixcc_image base-runner-debug
          pull_aixcc_image base-image

          sleep infinity
        volumeMounts:
        - name: host-shared
          mountPath: /shared
        - name: ssh-keys
          mountPath: /etc/ssh-keys
        resources:
          requests:
            cpu: 1000m
            memory: 4000Mi
          limits:
            cpu: 1500m
            memory: 6000Mi
      volumes:
        - name: host-shared
          hostPath:
            path: /shared
            type: DirectoryOrCreate
        - name: ssh-keys
          configMap:
            name: ssh-key-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssh-key-config
data:
  authorized_keys: |
    ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP4r7mfcUdIbUL7giD4n0MDlDQ1fIFS+iIRmav3c531C
    ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIuUi0+RaPOzKDQPyh9yuV1I8SAMmDMeJcfTIyxE/lpM
    ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP5b6I8/F95Ah2twOZZ9s8v69V+owCNB1lO7jmgx0iGT
---
apiVersion: v1
kind: Service
metadata:
  name: fuzzer-host-service
spec:
  type: ClusterIP
  #internalTrafficPolicy: Local
  ports:
    - port: 22
      targetPort: 22
      protocol: TCP
      name: ssh
  selector:
    app.kubernetes.io/name: host-config
    app.kubernetes.io/instance: artiphishell
