replicaCount: 1

nameOverride: "litellm"
fullnameOverride: "litellm"

image:
  repository: aixcc-litellm
  tag: latest
  pullPolicy: Always

imagePullSecrets:
  - name: acr-docker-secret
  - name: ci-acr-pull-secret

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "litellm-sa"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 4000
  targetPort: 4000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: api.artiphishell.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

#TODO(FINALDEPLOY) Update these to much higher values!!!
resources:
  limits:
    cpu: 10
    memory: 40Gi
  requests:
    cpu: 6
    memory: 24Gi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
startupProbe:
  httpGet:
    path: /health/readiness
    port: http
  failureThreshold: 30
  periodSeconds: 10
livenessProbe:
  httpGet:
    path: /health/liveliness
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /health/readiness
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 8
  maxReplicas: 32
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  support.shellphish.net/only-critical: "true"

tolerations:
  - key: "support.shellphish.net/only-critical"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

affinity: {}

podPacking:
  enabled: true
  group: "critical"
  maxSkew: 4
  weight: 100

# PostgreSQL sidecar configuration
postgresql:
  enabled: true
  image:
    repository: postgres
    tag: 15-alpine
    pullPolicy: IfNotPresent
  username: litellm
  password: litellm_password
  database: litellm
  port: 5432
  resources:
#TODO(FINALDEPLOY) Update these to much higher values!!!
    limits:
      cpu: 20
      memory: 64Gi
    requests:
      cpu: 10
      memory: 32Gi
  persistence:
    enabled: true
    size: 500Gi
    storageClass: ""

# Redis sidecar configuration
redis:
  enabled: true
  image:
    repository: redis
    tag: 7-alpine
    pullPolicy: IfNotPresent
  port: 6379
  password: ""  # Leave empty for no password, or set a password
  resources:
#TODO(FINALDEPLOY) Update these to much higher values!!!
    limits:
      cpu: 20
      memory: 64Gi
    requests:
      cpu: 10
      memory: 32Gi
  persistence:
    enabled: false
  
env: {}