{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "litellm.fullname" . }}-postgresql
  labels:
    {{- include "litellm.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  replicas: 1  # Always exactly 1 PostgreSQL instance
  selector:
    matchLabels:
      {{- include "litellm.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        {{- include "litellm.labels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgresql
          image: "{{ .Values.global.deployment_registry.value }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgresql.username }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgresql.password }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgresql.database }}"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgresql.port }}
              protocol: TCP
          {{- with .Values.postgresql.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.postgresql.persistence.enabled }}
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
            {{- end }}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.postgresql.username }}"
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.postgresql.username }}"
            initialDelaySeconds: 30
            periodSeconds: 15
      volumes:
        {{- if .Values.postgresql.persistence.enabled }}
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ include "litellm.fullname" . }}-postgresql
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 